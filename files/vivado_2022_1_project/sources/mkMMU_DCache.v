//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
//
// Ports:
// Name                         I/O  size props
// RDY_set_verbosity              O     1 const
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1
// valid                          O     1
// addr                           O    64 reg
// cword_fst                      O     1
// cword_snd                      O   128
// st_amo_val_fst                 O     1
// st_amo_val_snd                 O   128
// exc                            O     1
// exc_code                       O     6 reg
// RDY_server_flush_request_put   O     1 reg
// RDY_server_flush_response_get  O     1
// RDY_tlb_flush                  O     1 const
// mem_master_aw_canPeek          O     1 reg
// mem_master_aw_peek             O    97 reg
// RDY_mem_master_aw_peek         O     1 reg
// RDY_mem_master_aw_drop         O     1 reg
// mem_master_w_canPeek           O     1 reg
// mem_master_w_peek              O    74 reg
// RDY_mem_master_w_peek          O     1 reg
// RDY_mem_master_w_drop          O     1 reg
// mem_master_b_canPut            O     1 reg
// RDY_mem_master_b_put           O     1 reg
// mem_master_ar_canPeek          O     1 reg
// mem_master_ar_peek             O    97 reg
// RDY_mem_master_ar_peek         O     1 reg
// RDY_mem_master_ar_drop         O     1 reg
// mem_master_r_canPut            O     1 reg
// RDY_mem_master_r_put           O     1 reg
// events                         O    14 reg
// RDY_events                     O     1 const
// RDY_ma_ddr4_ready              O     1 const
// mv_status                      O     8
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// req_op                         I     2
// req_width_code                 I     3
// req_is_unsigned                I     1 reg
// req_amo_funct5                 I     5 reg
// req_addr                       I    64
// req_st_value                   I   129
// req_priv                       I     2 reg
// req_sstatus_SUM                I     1 reg
// req_mstatus_MXR                I     1 reg
// req_satp                       I    64 reg
// mem_master_b_put_val           I     6 reg
// mem_master_r_put_val           I    72 reg
// EN_set_verbosity               I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
// EN_commit                      I     1
// EN_server_flush_request_put    I     1
// EN_server_flush_response_get   I     1
// EN_tlb_flush                   I     1
// EN_mem_master_aw_drop          I     1
// EN_mem_master_w_drop           I     1
// EN_mem_master_b_put            I     1
// EN_mem_master_ar_drop          I     1
// EN_mem_master_r_put            I     1
// EN_ma_ddr4_ready               I     1
//
// Combinational paths from inputs to outputs:
//   EN_commit -> valid
//   EN_commit -> cword_fst
//   EN_commit -> cword_snd
//   EN_commit -> st_amo_val_fst
//   EN_commit -> st_amo_val_snd
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMMU_DCache(CLK,
		    RST_N,

		    set_verbosity_verbosity,
		    EN_set_verbosity,
		    RDY_set_verbosity,

		    EN_server_reset_request_put,
		    RDY_server_reset_request_put,

		    EN_server_reset_response_get,
		    RDY_server_reset_response_get,

		    req_op,
		    req_width_code,
		    req_is_unsigned,
		    req_amo_funct5,
		    req_addr,
		    req_st_value,
		    req_priv,
		    req_sstatus_SUM,
		    req_mstatus_MXR,
		    req_satp,
		    EN_req,

		    EN_commit,

		    valid,

		    addr,

		    cword_fst,

		    cword_snd,

		    st_amo_val_fst,

		    st_amo_val_snd,

		    exc,

		    exc_code,

		    EN_server_flush_request_put,
		    RDY_server_flush_request_put,

		    EN_server_flush_response_get,
		    RDY_server_flush_response_get,

		    EN_tlb_flush,
		    RDY_tlb_flush,

		    mem_master_aw_canPeek,

		    mem_master_aw_peek,
		    RDY_mem_master_aw_peek,

		    EN_mem_master_aw_drop,
		    RDY_mem_master_aw_drop,

		    mem_master_w_canPeek,

		    mem_master_w_peek,
		    RDY_mem_master_w_peek,

		    EN_mem_master_w_drop,
		    RDY_mem_master_w_drop,

		    mem_master_b_canPut,

		    mem_master_b_put_val,
		    EN_mem_master_b_put,
		    RDY_mem_master_b_put,

		    mem_master_ar_canPeek,

		    mem_master_ar_peek,
		    RDY_mem_master_ar_peek,

		    EN_mem_master_ar_drop,
		    RDY_mem_master_ar_drop,

		    mem_master_r_canPut,

		    mem_master_r_put_val,
		    EN_mem_master_r_put,
		    RDY_mem_master_r_put,

		    events,
		    RDY_events,

		    EN_ma_ddr4_ready,
		    RDY_ma_ddr4_ready,

		    mv_status);
  input  CLK;
  input  RST_N;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [1 : 0] req_op;
  input  [2 : 0] req_width_code;
  input  req_is_unsigned;
  input  [4 : 0] req_amo_funct5;
  input  [63 : 0] req_addr;
  input  [128 : 0] req_st_value;
  input  [1 : 0] req_priv;
  input  req_sstatus_SUM;
  input  req_mstatus_MXR;
  input  [63 : 0] req_satp;
  input  EN_req;

  // action method commit
  input  EN_commit;

  // value method valid
  output valid;

  // value method addr
  output [63 : 0] addr;

  // value method cword_fst
  output cword_fst;

  // value method cword_snd
  output [127 : 0] cword_snd;

  // value method st_amo_val_fst
  output st_amo_val_fst;

  // value method st_amo_val_snd
  output [127 : 0] st_amo_val_snd;

  // value method exc
  output exc;

  // value method exc_code
  output [5 : 0] exc_code;

  // action method server_flush_request_put
  input  EN_server_flush_request_put;
  output RDY_server_flush_request_put;

  // action method server_flush_response_get
  input  EN_server_flush_response_get;
  output RDY_server_flush_response_get;

  // action method tlb_flush
  input  EN_tlb_flush;
  output RDY_tlb_flush;

  // value method mem_master_aw_canPeek
  output mem_master_aw_canPeek;

  // value method mem_master_aw_peek
  output [96 : 0] mem_master_aw_peek;
  output RDY_mem_master_aw_peek;

  // action method mem_master_aw_drop
  input  EN_mem_master_aw_drop;
  output RDY_mem_master_aw_drop;

  // value method mem_master_w_canPeek
  output mem_master_w_canPeek;

  // value method mem_master_w_peek
  output [73 : 0] mem_master_w_peek;
  output RDY_mem_master_w_peek;

  // action method mem_master_w_drop
  input  EN_mem_master_w_drop;
  output RDY_mem_master_w_drop;

  // value method mem_master_b_canPut
  output mem_master_b_canPut;

  // action method mem_master_b_put
  input  [5 : 0] mem_master_b_put_val;
  input  EN_mem_master_b_put;
  output RDY_mem_master_b_put;

  // value method mem_master_ar_canPeek
  output mem_master_ar_canPeek;

  // value method mem_master_ar_peek
  output [96 : 0] mem_master_ar_peek;
  output RDY_mem_master_ar_peek;

  // action method mem_master_ar_drop
  input  EN_mem_master_ar_drop;
  output RDY_mem_master_ar_drop;

  // value method mem_master_r_canPut
  output mem_master_r_canPut;

  // action method mem_master_r_put
  input  [71 : 0] mem_master_r_put_val;
  input  EN_mem_master_r_put;
  output RDY_mem_master_r_put;

  // value method events
  output [13 : 0] events;
  output RDY_events;

  // action method ma_ddr4_ready
  input  EN_ma_ddr4_ready;
  output RDY_ma_ddr4_ready;

  // value method mv_status
  output [7 : 0] mv_status;

  // signals for module outputs
  wire [127 : 0] cword_snd, st_amo_val_snd;
  wire [96 : 0] mem_master_ar_peek, mem_master_aw_peek;
  wire [73 : 0] mem_master_w_peek;
  wire [63 : 0] addr;
  wire [13 : 0] events;
  wire [7 : 0] mv_status;
  wire [5 : 0] exc_code;
  wire RDY_events,
       RDY_ma_ddr4_ready,
       RDY_mem_master_ar_drop,
       RDY_mem_master_ar_peek,
       RDY_mem_master_aw_drop,
       RDY_mem_master_aw_peek,
       RDY_mem_master_b_put,
       RDY_mem_master_r_put,
       RDY_mem_master_w_drop,
       RDY_mem_master_w_peek,
       RDY_server_flush_request_put,
       RDY_server_flush_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get,
       RDY_set_verbosity,
       RDY_tlb_flush,
       cword_fst,
       exc,
       mem_master_ar_canPeek,
       mem_master_aw_canPeek,
       mem_master_b_canPut,
       mem_master_r_canPut,
       mem_master_w_canPeek,
       st_amo_val_fst,
       valid;

  // inlined wires
  reg [128 : 0] cache_dw_output_ld_val$wget;
  wire [128 : 0] cache_dw_output_st_amo_val$wget;
  wire [13 : 0] cache_aw_events_wires_ifc_ifc_wires_1$wget,
		cache_aw_events_wires_ifc_ifc_wires_3$wget,
		cache_aw_events_wires_ifc_ifc_wires_4$wget,
		cache_aw_events_wires_ifc_ifc_wires_6$wget;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$port0__write_1,
	       cache_ctr_wr_rsps_pending_crg$port1__read,
	       cache_ctr_wr_rsps_pending_crg$port1__write_1,
	       cache_ctr_wr_rsps_pending_crg$port2__read,
	       cache_ctr_wr_rsps_pending_crg$port3__read;
  wire cache_ctr_wr_rsps_pending_crg$EN_port2__write,
       cache_dw_output_ld_val$whas,
       cache_dw_output_st_amo_val$whas,
       cache_dw_valid$wget,
       cache_dw_valid$whas,
       cache_rw_reset_req$whas;

  // register cache_aw_events_register
  reg [13 : 0] cache_aw_events_register;
  wire [13 : 0] cache_aw_events_register$D_IN;
  wire cache_aw_events_register$EN;

  // register cache_cfg_verbosity
  reg [3 : 0] cache_cfg_verbosity;
  wire [3 : 0] cache_cfg_verbosity$D_IN;
  wire cache_cfg_verbosity$EN;

  // register cache_ctr_wr_rsps_pending_crg
  reg [3 : 0] cache_ctr_wr_rsps_pending_crg;
  wire [3 : 0] cache_ctr_wr_rsps_pending_crg$D_IN;
  wire cache_ctr_wr_rsps_pending_crg$EN;

  // register cache_rg_addr
  reg [63 : 0] cache_rg_addr;
  wire [63 : 0] cache_rg_addr$D_IN;
  wire cache_rg_addr$EN;

  // register cache_rg_allow_cap
  reg cache_rg_allow_cap;
  wire cache_rg_allow_cap$D_IN, cache_rg_allow_cap$EN;

  // register cache_rg_amo_funct5
  reg [4 : 0] cache_rg_amo_funct5;
  wire [4 : 0] cache_rg_amo_funct5$D_IN;
  wire cache_rg_amo_funct5$EN;

  // register cache_rg_cache_rereq_data
  reg cache_rg_cache_rereq_data;
  wire cache_rg_cache_rereq_data$D_IN, cache_rg_cache_rereq_data$EN;

  // register cache_rg_cset_cword_in_cache
  reg [7 : 0] cache_rg_cset_cword_in_cache;
  wire [7 : 0] cache_rg_cset_cword_in_cache$D_IN;
  wire cache_rg_cset_cword_in_cache$EN;

  // register cache_rg_cset_in_cache
  reg [5 : 0] cache_rg_cset_in_cache;
  wire [5 : 0] cache_rg_cset_in_cache$D_IN;
  wire cache_rg_cset_in_cache$EN;

  // register cache_rg_ddr4_ready
  reg cache_rg_ddr4_ready;
  wire cache_rg_ddr4_ready$D_IN, cache_rg_ddr4_ready$EN;

  // register cache_rg_error_during_refill
  reg cache_rg_error_during_refill;
  wire cache_rg_error_during_refill$D_IN, cache_rg_error_during_refill$EN;

  // register cache_rg_exc_code
  reg [5 : 0] cache_rg_exc_code;
  reg [5 : 0] cache_rg_exc_code$D_IN;
  wire cache_rg_exc_code$EN;

  // register cache_rg_is_unsigned
  reg cache_rg_is_unsigned;
  wire cache_rg_is_unsigned$D_IN, cache_rg_is_unsigned$EN;

  // register cache_rg_ld_val
  reg [128 : 0] cache_rg_ld_val;
  reg [128 : 0] cache_rg_ld_val$D_IN;
  wire cache_rg_ld_val$EN;

  // register cache_rg_lower_word64
  reg [63 : 0] cache_rg_lower_word64;
  wire [63 : 0] cache_rg_lower_word64$D_IN;
  wire cache_rg_lower_word64$EN;

  // register cache_rg_lower_word64_full
  reg cache_rg_lower_word64_full;
  reg cache_rg_lower_word64_full$D_IN;
  wire cache_rg_lower_word64_full$EN;

  // register cache_rg_lrsc_pa
  reg [63 : 0] cache_rg_lrsc_pa;
  wire [63 : 0] cache_rg_lrsc_pa$D_IN;
  wire cache_rg_lrsc_pa$EN;

  // register cache_rg_lrsc_valid
  reg cache_rg_lrsc_valid;
  wire cache_rg_lrsc_valid$D_IN, cache_rg_lrsc_valid$EN;

  // register cache_rg_mem_req_sent
  reg cache_rg_mem_req_sent;
  wire cache_rg_mem_req_sent$D_IN, cache_rg_mem_req_sent$EN;

  // register cache_rg_mstatus_MXR
  reg cache_rg_mstatus_MXR;
  wire cache_rg_mstatus_MXR$D_IN, cache_rg_mstatus_MXR$EN;

  // register cache_rg_op
  reg [1 : 0] cache_rg_op;
  wire [1 : 0] cache_rg_op$D_IN;
  wire cache_rg_op$EN;

  // register cache_rg_pa
  reg [63 : 0] cache_rg_pa;
  wire [63 : 0] cache_rg_pa$D_IN;
  wire cache_rg_pa$EN;

  // register cache_rg_priv
  reg [1 : 0] cache_rg_priv;
  wire [1 : 0] cache_rg_priv$D_IN;
  wire cache_rg_priv$EN;

  // register cache_rg_pte_pa
  reg [63 : 0] cache_rg_pte_pa;
  reg [63 : 0] cache_rg_pte_pa$D_IN;
  wire cache_rg_pte_pa$EN;

  // register cache_rg_satp
  reg [63 : 0] cache_rg_satp;
  wire [63 : 0] cache_rg_satp$D_IN;
  wire cache_rg_satp$EN;

  // register cache_rg_sstatus_SUM
  reg cache_rg_sstatus_SUM;
  wire cache_rg_sstatus_SUM$D_IN, cache_rg_sstatus_SUM$EN;

  // register cache_rg_st_amo_val
  reg [128 : 0] cache_rg_st_amo_val;
  wire [128 : 0] cache_rg_st_amo_val$D_IN;
  wire cache_rg_st_amo_val$EN;

  // register cache_rg_state
  reg [4 : 0] cache_rg_state;
  reg [4 : 0] cache_rg_state$D_IN;
  wire cache_rg_state$EN;

  // register cache_rg_tlb_walk
  reg cache_rg_tlb_walk;
  wire cache_rg_tlb_walk$D_IN, cache_rg_tlb_walk$EN;

  // register cache_rg_victim_way
  reg cache_rg_victim_way;
  wire cache_rg_victim_way$D_IN, cache_rg_victim_way$EN;

  // register cache_rg_width_code
  reg [2 : 0] cache_rg_width_code;
  wire [2 : 0] cache_rg_width_code$D_IN;
  wire cache_rg_width_code$EN;

  // register cache_rg_wr_rsp_err
  reg cache_rg_wr_rsp_err;
  wire cache_rg_wr_rsp_err$D_IN, cache_rg_wr_rsp_err$EN;

  // ports of submodule cache_f_fabric_second_write_reqs
  wire [73 : 0] cache_f_fabric_second_write_reqs$D_IN,
		cache_f_fabric_second_write_reqs$D_OUT;
  wire cache_f_fabric_second_write_reqs$CLR,
       cache_f_fabric_second_write_reqs$DEQ,
       cache_f_fabric_second_write_reqs$EMPTY_N,
       cache_f_fabric_second_write_reqs$ENQ,
       cache_f_fabric_second_write_reqs$FULL_N;

  // ports of submodule cache_f_fabric_write_reqs
  reg [195 : 0] cache_f_fabric_write_reqs$D_IN;
  wire [195 : 0] cache_f_fabric_write_reqs$D_OUT;
  wire cache_f_fabric_write_reqs$CLR,
       cache_f_fabric_write_reqs$DEQ,
       cache_f_fabric_write_reqs$EMPTY_N,
       cache_f_fabric_write_reqs$ENQ,
       cache_f_fabric_write_reqs$FULL_N;

  // ports of submodule cache_f_pte_writebacks
  wire [127 : 0] cache_f_pte_writebacks$D_IN, cache_f_pte_writebacks$D_OUT;
  wire cache_f_pte_writebacks$CLR,
       cache_f_pte_writebacks$DEQ,
       cache_f_pte_writebacks$EMPTY_N,
       cache_f_pte_writebacks$ENQ,
       cache_f_pte_writebacks$FULL_N;

  // ports of submodule cache_f_reset_reqs
  wire cache_f_reset_reqs$CLR,
       cache_f_reset_reqs$DEQ,
       cache_f_reset_reqs$D_IN,
       cache_f_reset_reqs$D_OUT,
       cache_f_reset_reqs$EMPTY_N,
       cache_f_reset_reqs$ENQ,
       cache_f_reset_reqs$FULL_N;

  // ports of submodule cache_f_reset_rsps
  wire cache_f_reset_rsps$CLR,
       cache_f_reset_rsps$DEQ,
       cache_f_reset_rsps$D_IN,
       cache_f_reset_rsps$D_OUT,
       cache_f_reset_rsps$EMPTY_N,
       cache_f_reset_rsps$ENQ,
       cache_f_reset_rsps$FULL_N;

  // ports of submodule cache_masterPortShim_arff
  reg [96 : 0] cache_masterPortShim_arff$D_IN;
  wire [96 : 0] cache_masterPortShim_arff$D_OUT;
  wire cache_masterPortShim_arff$CLR,
       cache_masterPortShim_arff$DEQ,
       cache_masterPortShim_arff$EMPTY_N,
       cache_masterPortShim_arff$ENQ,
       cache_masterPortShim_arff$FULL_N;

  // ports of submodule cache_masterPortShim_awff
  wire [96 : 0] cache_masterPortShim_awff$D_IN,
		cache_masterPortShim_awff$D_OUT;
  wire cache_masterPortShim_awff$CLR,
       cache_masterPortShim_awff$DEQ,
       cache_masterPortShim_awff$EMPTY_N,
       cache_masterPortShim_awff$ENQ,
       cache_masterPortShim_awff$FULL_N;

  // ports of submodule cache_masterPortShim_bff
  wire [5 : 0] cache_masterPortShim_bff$D_IN, cache_masterPortShim_bff$D_OUT;
  wire cache_masterPortShim_bff$CLR,
       cache_masterPortShim_bff$DEQ,
       cache_masterPortShim_bff$EMPTY_N,
       cache_masterPortShim_bff$ENQ,
       cache_masterPortShim_bff$FULL_N;

  // ports of submodule cache_masterPortShim_rff
  wire [71 : 0] cache_masterPortShim_rff$D_IN, cache_masterPortShim_rff$D_OUT;
  wire cache_masterPortShim_rff$CLR,
       cache_masterPortShim_rff$DEQ,
       cache_masterPortShim_rff$EMPTY_N,
       cache_masterPortShim_rff$ENQ,
       cache_masterPortShim_rff$FULL_N;

  // ports of submodule cache_masterPortShim_wff
  wire [73 : 0] cache_masterPortShim_wff$D_IN, cache_masterPortShim_wff$D_OUT;
  wire cache_masterPortShim_wff$CLR,
       cache_masterPortShim_wff$DEQ,
       cache_masterPortShim_wff$EMPTY_N,
       cache_masterPortShim_wff$ENQ,
       cache_masterPortShim_wff$FULL_N;

  // ports of submodule cache_ram_cword_set
  reg [257 : 0] cache_ram_cword_set$DIB;
  reg [7 : 0] cache_ram_cword_set$ADDRB;
  wire [257 : 0] cache_ram_cword_set$DIA, cache_ram_cword_set$DOB;
  wire [7 : 0] cache_ram_cword_set$ADDRA;
  wire cache_ram_cword_set$ENA,
       cache_ram_cword_set$ENB,
       cache_ram_cword_set$WEA,
       cache_ram_cword_set$WEB;

  // ports of submodule cache_ram_state_and_ctag_cset
  wire [105 : 0] cache_ram_state_and_ctag_cset$DIA,
		 cache_ram_state_and_ctag_cset$DIB,
		 cache_ram_state_and_ctag_cset$DOB;
  wire [5 : 0] cache_ram_state_and_ctag_cset$ADDRA,
	       cache_ram_state_and_ctag_cset$ADDRB;
  wire cache_ram_state_and_ctag_cset$ENA,
       cache_ram_state_and_ctag_cset$ENB,
       cache_ram_state_and_ctag_cset$WEA,
       cache_ram_state_and_ctag_cset$WEB;

  // ports of submodule cache_soc_map
  wire [63 : 0] cache_soc_map$m_is_IO_addr_addr,
		cache_soc_map$m_is_mem_addr_addr,
		cache_soc_map$m_is_near_mem_IO_addr_addr;
  wire cache_soc_map$m_is_mem_addr;

  // ports of submodule cache_tlb
  reg [1 : 0] cache_tlb$ma_insert_level;
  wire [203 : 0] cache_tlb$mv_vm_get_xlate;
  wire [63 : 0] cache_tlb$ma_insert_pte,
		cache_tlb$ma_insert_pte_pa,
		cache_tlb$mv_vm_get_xlate_satp,
		cache_tlb$mv_vm_put_va_full_va;
  wire [26 : 0] cache_tlb$ma_insert_vpn;
  wire [15 : 0] cache_tlb$ma_insert_asid;
  wire [1 : 0] cache_tlb$mv_vm_get_xlate_priv;
  wire cache_tlb$EN_ma_flush,
       cache_tlb$EN_ma_insert,
       cache_tlb$EN_mv_vm_put_va,
       cache_tlb$mv_vm_get_xlate_cap,
       cache_tlb$mv_vm_get_xlate_mstatus_MXR,
       cache_tlb$mv_vm_get_xlate_read_not_write,
       cache_tlb$mv_vm_get_xlate_sstatus_SUM;

  // rule scheduling signals
  wire CAN_FIRE_RL_cache_aw_events_update_reg,
       CAN_FIRE_RL_cache_do_req,
       CAN_FIRE_RL_cache_do_reset_req,
       CAN_FIRE_RL_cache_do_set_req_valid,
       CAN_FIRE_RL_cache_do_tlb_flush,
       CAN_FIRE_RL_cache_rl_ST_AMO_response,
       CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       CAN_FIRE_RL_cache_rl_count_miss_lat,
       CAN_FIRE_RL_cache_rl_count_tlb_latency,
       CAN_FIRE_RL_cache_rl_discard_write_rsp,
       CAN_FIRE_RL_cache_rl_drive_exception_rsp,
       CAN_FIRE_RL_cache_rl_fabric_send_second_write_req,
       CAN_FIRE_RL_cache_rl_fabric_send_write_req,
       CAN_FIRE_RL_cache_rl_io_AMO_SC_req,
       CAN_FIRE_RL_cache_rl_io_AMO_op_req,
       CAN_FIRE_RL_cache_rl_io_AMO_read_rsp,
       CAN_FIRE_RL_cache_rl_io_read_req,
       CAN_FIRE_RL_cache_rl_io_read_rsp,
       CAN_FIRE_RL_cache_rl_io_write_req,
       CAN_FIRE_RL_cache_rl_maintain_io_read_rsp,
       CAN_FIRE_RL_cache_rl_probe_and_immed_rsp,
       CAN_FIRE_RL_cache_rl_ptw_level_0,
       CAN_FIRE_RL_cache_rl_ptw_level_1,
       CAN_FIRE_RL_cache_rl_ptw_level_2,
       CAN_FIRE_RL_cache_rl_rereq,
       CAN_FIRE_RL_cache_rl_reset,
       CAN_FIRE_RL_cache_rl_start_cache_refill,
       CAN_FIRE_RL_cache_rl_start_reset,
       CAN_FIRE_RL_cache_rl_start_tlb_refill,
       CAN_FIRE_RL_cache_rl_writeback_updated_PTE,
       CAN_FIRE___me_check_26,
       CAN_FIRE_commit,
       CAN_FIRE_ma_ddr4_ready,
       CAN_FIRE_mem_master_ar_drop,
       CAN_FIRE_mem_master_aw_drop,
       CAN_FIRE_mem_master_b_put,
       CAN_FIRE_mem_master_r_put,
       CAN_FIRE_mem_master_w_drop,
       CAN_FIRE_req,
       CAN_FIRE_server_flush_request_put,
       CAN_FIRE_server_flush_response_get,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_tlb_flush,
       WILL_FIRE_RL_cache_aw_events_update_reg,
       WILL_FIRE_RL_cache_do_req,
       WILL_FIRE_RL_cache_do_reset_req,
       WILL_FIRE_RL_cache_do_set_req_valid,
       WILL_FIRE_RL_cache_do_tlb_flush,
       WILL_FIRE_RL_cache_rl_ST_AMO_response,
       WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop,
       WILL_FIRE_RL_cache_rl_count_miss_lat,
       WILL_FIRE_RL_cache_rl_count_tlb_latency,
       WILL_FIRE_RL_cache_rl_discard_write_rsp,
       WILL_FIRE_RL_cache_rl_drive_exception_rsp,
       WILL_FIRE_RL_cache_rl_fabric_send_second_write_req,
       WILL_FIRE_RL_cache_rl_fabric_send_write_req,
       WILL_FIRE_RL_cache_rl_io_AMO_SC_req,
       WILL_FIRE_RL_cache_rl_io_AMO_op_req,
       WILL_FIRE_RL_cache_rl_io_AMO_read_rsp,
       WILL_FIRE_RL_cache_rl_io_read_req,
       WILL_FIRE_RL_cache_rl_io_read_rsp,
       WILL_FIRE_RL_cache_rl_io_write_req,
       WILL_FIRE_RL_cache_rl_maintain_io_read_rsp,
       WILL_FIRE_RL_cache_rl_probe_and_immed_rsp,
       WILL_FIRE_RL_cache_rl_ptw_level_0,
       WILL_FIRE_RL_cache_rl_ptw_level_1,
       WILL_FIRE_RL_cache_rl_ptw_level_2,
       WILL_FIRE_RL_cache_rl_rereq,
       WILL_FIRE_RL_cache_rl_reset,
       WILL_FIRE_RL_cache_rl_start_cache_refill,
       WILL_FIRE_RL_cache_rl_start_reset,
       WILL_FIRE_RL_cache_rl_start_tlb_refill,
       WILL_FIRE_RL_cache_rl_writeback_updated_PTE,
       WILL_FIRE___me_check_26,
       WILL_FIRE_commit,
       WILL_FIRE_ma_ddr4_ready,
       WILL_FIRE_mem_master_ar_drop,
       WILL_FIRE_mem_master_aw_drop,
       WILL_FIRE_mem_master_b_put,
       WILL_FIRE_mem_master_r_put,
       WILL_FIRE_mem_master_w_drop,
       WILL_FIRE_req,
       WILL_FIRE_server_flush_request_put,
       WILL_FIRE_server_flush_response_get,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_tlb_flush;

  // inputs to muxes for submodule ports
  wire [257 : 0] MUX_cache_ram_cword_set$a_put_3__VAL_1,
		 MUX_cache_ram_cword_set$a_put_3__VAL_2;
  wire [195 : 0] MUX_cache_f_fabric_write_reqs$enq_1__VAL_1,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_2,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_3,
		 MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
  wire [128 : 0] MUX_cache_dw_output_ld_val$wset_1__VAL_1,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_2,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_3,
		 MUX_cache_dw_output_ld_val$wset_1__VAL_4,
		 MUX_cache_rg_ld_val$write_1__VAL_1,
		 MUX_cache_rg_st_amo_val$write_1__VAL_2;
  wire [105 : 0] MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1,
		 MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2;
  wire [96 : 0] MUX_cache_masterPortShim_arff$enq_1__VAL_1,
		MUX_cache_masterPortShim_arff$enq_1__VAL_2,
		MUX_cache_masterPortShim_arff$enq_1__VAL_3,
		MUX_cache_masterPortShim_arff$enq_1__VAL_4,
		MUX_cache_masterPortShim_arff$enq_1__VAL_5;
  wire [73 : 0] MUX_cache_masterPortShim_wff$enq_1__VAL_2;
  wire [63 : 0] MUX_cache_rg_pte_pa$write_1__VAL_1,
		MUX_cache_rg_pte_pa$write_1__VAL_2,
		MUX_cache_rg_pte_pa$write_1__VAL_3;
  wire [7 : 0] MUX_cache_ram_cword_set$b_put_2__VAL_2,
	       MUX_cache_ram_cword_set$b_put_2__VAL_4;
  wire [5 : 0] MUX_cache_rg_cset_in_cache$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_1,
	       MUX_cache_rg_exc_code$write_1__VAL_4,
	       MUX_cache_rg_exc_code$write_1__VAL_5,
	       MUX_cache_rg_exc_code$write_1__VAL_8;
  wire [4 : 0] MUX_cache_rg_state$write_1__VAL_11,
	       MUX_cache_rg_state$write_1__VAL_13,
	       MUX_cache_rg_state$write_1__VAL_14,
	       MUX_cache_rg_state$write_1__VAL_15,
	       MUX_cache_rg_state$write_1__VAL_17,
	       MUX_cache_rg_state$write_1__VAL_2,
	       MUX_cache_rg_state$write_1__VAL_4,
	       MUX_cache_rg_state$write_1__VAL_8;
  wire MUX_cache_dw_output_ld_val$wset_1__SEL_3,
       MUX_cache_dw_output_ld_val$wset_1__SEL_4,
       MUX_cache_dw_valid$wset_1__SEL_1,
       MUX_cache_dw_valid$wset_1__SEL_2,
       MUX_cache_f_fabric_write_reqs$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_1,
       MUX_cache_masterPortShim_arff$enq_1__SEL_2,
       MUX_cache_masterPortShim_arff$enq_1__SEL_3,
       MUX_cache_ram_cword_set$a_put_1__SEL_1,
       MUX_cache_ram_cword_set$b_put_1__SEL_1,
       MUX_cache_ram_cword_set$b_put_1__SEL_2,
       MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1,
       MUX_cache_rg_error_during_refill$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__PSEL_2,
       MUX_cache_rg_exc_code$write_1__PSEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_1,
       MUX_cache_rg_exc_code$write_1__SEL_2,
       MUX_cache_rg_exc_code$write_1__SEL_3,
       MUX_cache_rg_exc_code$write_1__SEL_5,
       MUX_cache_rg_exc_code$write_1__SEL_6,
       MUX_cache_rg_exc_code$write_1__SEL_7,
       MUX_cache_rg_ld_val$write_1__SEL_1,
       MUX_cache_rg_ld_val$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_1,
       MUX_cache_rg_lower_word64_full$write_1__SEL_2,
       MUX_cache_rg_lower_word64_full$write_1__SEL_4,
       MUX_cache_rg_lower_word64_full$write_1__VAL_2,
       MUX_cache_rg_lrsc_valid$write_1__SEL_2,
       MUX_cache_rg_pa$write_1__SEL_2,
       MUX_cache_rg_state$write_1__SEL_11,
       MUX_cache_rg_state$write_1__SEL_18,
       MUX_cache_rg_state$write_1__SEL_4,
       MUX_cache_rg_state$write_1__SEL_5,
       MUX_cache_rg_state$write_1__SEL_6,
       MUX_cache_rg_state$write_1__SEL_7,
       MUX_cache_rg_state$write_1__SEL_8,
       MUX_cache_rg_state$write_1__SEL_9,
       MUX_cache_tlb$ma_insert_1__SEL_1,
       MUX_cache_tlb$ma_insert_1__SEL_2,
       MUX_cache_tlb$ma_insert_1__SEL_3,
       MUX_cache_tlb$ma_insert_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h7303;
  reg [31 : 0] v__h7398;
  reg [31 : 0] v__h7531;
  reg [31 : 0] v__h36612;
  reg [31 : 0] v__h41335;
  reg [31 : 0] v__h65255;
  reg [31 : 0] v__h46993;
  reg [63 : 0] v__h47182;
  reg [31 : 0] v__h47965;
  reg [31 : 0] v__h47703;
  reg [63 : 0] v__h48120;
  reg [31 : 0] v__h48286;
  reg [31 : 0] v__h48403;
  reg [31 : 0] v__h47885;
  reg [31 : 0] v__h49078;
  reg [31 : 0] v__h48819;
  reg [63 : 0] v__h49232;
  reg [31 : 0] v__h49515;
  reg [31 : 0] v__h49398;
  reg [31 : 0] v__h48998;
  reg [31 : 0] v__h50031;
  reg [31 : 0] v__h50111;
  reg [31 : 0] v__h50202;
  reg [31 : 0] v__h49951;
  reg [31 : 0] v__h50512;
  reg [63 : 0] v__h50654;
  reg [31 : 0] v__h51380;
  reg [31 : 0] v__h51638;
  reg [31 : 0] v__h54747;
  reg [63 : 0] v__h54976;
  reg [63 : 0] v__h55077;
  reg [31 : 0] v__h55289;
  reg [31 : 0] v__h56495;
  reg [31 : 0] v__h56630;
  reg [31 : 0] v__h56325;
  reg [31 : 0] v__h56759;
  reg [31 : 0] v__h56869;
  reg [31 : 0] v__h56959;
  reg [31 : 0] v__h57195;
  reg [31 : 0] v__h57339;
  reg [63 : 0] v__h57544;
  reg [63 : 0] v__h57645;
  reg [31 : 0] v__h57805;
  reg [31 : 0] v__h58208;
  reg [31 : 0] v__h60475;
  reg [31 : 0] v__h58136;
  reg [31 : 0] v__h61115;
  reg [31 : 0] v__h61157;
  reg [31 : 0] v__h6838;
  reg [31 : 0] v__h62085;
  reg [31 : 0] v__h63832;
  reg [31 : 0] v__h6832;
  reg [31 : 0] v__h7297;
  reg [31 : 0] v__h7392;
  reg [31 : 0] v__h7525;
  reg [31 : 0] v__h36606;
  reg [31 : 0] v__h41329;
  reg [31 : 0] v__h46987;
  reg [31 : 0] v__h47697;
  reg [31 : 0] v__h47879;
  reg [31 : 0] v__h47959;
  reg [31 : 0] v__h48280;
  reg [31 : 0] v__h48397;
  reg [31 : 0] v__h48813;
  reg [31 : 0] v__h48992;
  reg [31 : 0] v__h49072;
  reg [31 : 0] v__h49392;
  reg [31 : 0] v__h49509;
  reg [31 : 0] v__h49945;
  reg [31 : 0] v__h50025;
  reg [31 : 0] v__h50105;
  reg [31 : 0] v__h50196;
  reg [31 : 0] v__h50506;
  reg [31 : 0] v__h51374;
  reg [31 : 0] v__h51632;
  reg [31 : 0] v__h54741;
  reg [31 : 0] v__h55283;
  reg [31 : 0] v__h56319;
  reg [31 : 0] v__h56489;
  reg [31 : 0] v__h56624;
  reg [31 : 0] v__h56753;
  reg [31 : 0] v__h56863;
  reg [31 : 0] v__h56953;
  reg [31 : 0] v__h57189;
  reg [31 : 0] v__h57333;
  reg [31 : 0] v__h57799;
  reg [31 : 0] v__h58130;
  reg [31 : 0] v__h58202;
  reg [31 : 0] v__h60469;
  reg [31 : 0] v__h61109;
  reg [31 : 0] v__h61151;
  reg [31 : 0] v__h62079;
  reg [31 : 0] v__h63826;
  reg [31 : 0] v__h65249;
  // synopsys translate_on

  // remaining internal signals
  reg [127 : 0] CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60,
		CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196,
		IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205,
		b__h37850,
		b__h41854,
		new_cword__h37832;
  reg [63 : 0] CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62,
	       IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664,
	       IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955,
	       IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959,
	       IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109,
	       IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868,
	       _theResult_____2__h42064,
	       _theResult_____2__h58331,
	       _theResult___fst__h41041,
	       _theResult___fst__h55527,
	       _theResult___fst__h60210,
	       _theResult___fst__h9901,
	       _theResult___fst__h9947,
	       _theResult___snd_fst__h58513,
	       _theResult___snd_fst__h9903,
	       mem_req_wr_data_wdata__h5638,
	       w1__h41916,
	       w1__h41921,
	       w1__h58293,
	       w1__h58298;
  reg [7 : 0] fabric_2_strb__h5331, mem_req_wr_data_wstrb__h5639;
  reg [5 : 0] x1_avValue_snd_snd__h46483;
  reg [4 : 0] CASE_cache_tlbmv_vm_get_xlate_BITS_203_TO_202_ETC__q78;
  reg [2 : 0] _theResult___snd_snd_fst_val__h5602, size_val__h57519;
  reg CASE_cache_rg_victim_way_0_cache_ram_state_and_ETC__q1;
  wire [128 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1101,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1218,
		 IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1100,
		 IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1217,
		 IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1228,
		 IF_cache_rg_victim_way_502_THEN_cache_masterPo_ETC___d1573,
		 IF_cache_rg_victim_way_502_THEN_cache_ram_cwor_ETC___d1572,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713,
		 x__h10011,
		 y__h10012,
		 y__h10065,
		 y__h22757;
  wire [127 : 0] IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146,
		 b__h51868,
		 new_st_val_128__h42065,
		 new_st_val_128__h58332,
		 x__h35451,
		 x__h46309,
		 x__h58326,
		 x__h60453;
  wire [63 : 0] IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d731,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d736,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d741,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d746,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d751,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d756,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d761,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d766,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d771,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d776,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d781,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d786,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d791,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d796,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d801,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d806,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d826,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d830,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d834,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d838,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d842,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d846,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d850,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d854,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d866,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d870,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d874,
		SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d878,
		_theResult___fst__h55591,
		cline_fabric_addr__h50561,
		lev_0_pte_pa__h49110,
		lev_0_pte_pa_w64_fa__h49112,
		lev_1_PTN_pa__h47995,
		lev_1_pte_pa__h47997,
		lev_1_pte_pa_w64_fa__h47999,
		lev_2_pte_pa__h47042,
		lev_2_pte_pa_w64_fa__h47044,
		new_st_val_64__h42070,
		new_st_val_64__h42142,
		new_st_val_64__h43339,
		new_st_val_64__h43343,
		new_st_val_64__h43347,
		new_st_val_64__h43351,
		new_st_val_64__h43356,
		new_st_val_64__h43362,
		new_st_val_64__h43367,
		new_st_val_64__h58337,
		new_st_val_64__h58409,
		new_st_val_64__h60320,
		new_st_val_64__h60324,
		new_st_val_64__h60328,
		new_st_val_64__h60332,
		new_st_val_64__h60337,
		new_st_val_64__h60343,
		new_st_val_64__h60348,
		result_hi__h58519,
		result_lo__h35486,
		result_lo__h35521,
		result_lo__h35554,
		result_lo__h35587,
		result_lo__h35620,
		result_lo__h35653,
		result_lo__h35686,
		result_lo__h35719,
		result_lo__h35752,
		result_lo__h35785,
		result_lo__h35818,
		result_lo__h35851,
		result_lo__h35884,
		result_lo__h35917,
		result_lo__h35950,
		result_lo__h35983,
		result_lo__h36038,
		result_lo__h36071,
		result_lo__h36104,
		result_lo__h36137,
		result_lo__h36170,
		result_lo__h36203,
		result_lo__h36236,
		result_lo__h36269,
		result_lo__h36316,
		result_lo__h36349,
		result_lo__h36382,
		result_lo__h36415,
		result_lo__h55659,
		result_lo__h55692,
		result_lo__h55725,
		result_lo__h55758,
		result_lo__h55791,
		result_lo__h55824,
		result_lo__h55857,
		result_lo__h55890,
		result_lo__h55953,
		result_lo__h55986,
		result_lo__h56019,
		result_lo__h56052,
		result_lo__h56103,
		result_lo__h56136,
		result_lo__h58518,
		result_lo__h59286,
		result_lo__h59317,
		result_lo__h59348,
		result_lo__h59379,
		result_lo__h59410,
		result_lo__h59441,
		result_lo__h59472,
		result_lo__h59503,
		result_lo__h59534,
		result_lo__h59565,
		result_lo__h59596,
		result_lo__h59627,
		result_lo__h59658,
		result_lo__h59689,
		result_lo__h59720,
		result_lo__h59751,
		result_lo__h59804,
		result_lo__h59835,
		result_lo__h59866,
		result_lo__h59897,
		result_lo__h59928,
		result_lo__h59959,
		result_lo__h59990,
		result_lo__h60021,
		result_lo__h60066,
		result_lo__h60097,
		result_lo__h60128,
		result_lo__h60159,
		satp_pa__h2304,
		vpn_0_pa__h49109,
		vpn_1_pa__h47996,
		vpn_2_pa__h47041,
		w1___1__h42109,
		w1___1__h58376,
		w2__h41923,
		word64__h5582,
		x__h42068,
		x__h58335;
  wire [55 : 0] x__h48072, x__h7669;
  wire [31 : 0] cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q4,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q11,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q46,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q47,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q48,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q49,
		cache_rg_st_amo_val_BITS_31_TO_0__q59,
		result_hi8519_BITS_31_TO_0__q18,
		result_hi8519_BITS_63_TO_32__q25,
		result_lo8518_BITS_31_TO_0__q66,
		result_lo8518_BITS_63_TO_32__q72,
		w11916_BITS_31_TO_0__q58,
		w18293_BITS_31_TO_0__q77;
  wire [15 : 0] cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q3,
		cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q8,
		cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q10,
		cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q14,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q30,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q32,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q34,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q36,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q38,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q40,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q42,
		cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q43,
		result_hi8519_BITS_15_TO_0__q17,
		result_hi8519_BITS_31_TO_16__q21,
		result_hi8519_BITS_47_TO_32__q24,
		result_hi8519_BITS_63_TO_48__q28,
		result_lo8518_BITS_15_TO_0__q64,
		result_lo8518_BITS_31_TO_16__q68,
		result_lo8518_BITS_47_TO_32__q71,
		result_lo8518_BITS_63_TO_48__q75;
  wire [12 : 0] cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d300;
  wire [10 : 0] cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d299;
  wire [8 : 0] cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d298;
  wire [7 : 0] cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q2,
	       cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q5,
	       cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q6,
	       cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7,
	       cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q9,
	       cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q12,
	       cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q13,
	       cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q15,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q31,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q33,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q35,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q37,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q39,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q41,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q44,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q45,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q50,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q51,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q52,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q53,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q54,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q55,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q56,
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q57,
	       mem_req_wr_addr_awlen__h5564,
	       result_hi8519_BITS_15_TO_8__q19,
	       result_hi8519_BITS_23_TO_16__q20,
	       result_hi8519_BITS_31_TO_24__q22,
	       result_hi8519_BITS_39_TO_32__q23,
	       result_hi8519_BITS_47_TO_40__q26,
	       result_hi8519_BITS_55_TO_48__q27,
	       result_hi8519_BITS_63_TO_56__q29,
	       result_hi8519_BITS_7_TO_0__q16,
	       result_lo8518_BITS_15_TO_8__q67,
	       result_lo8518_BITS_23_TO_16__q65,
	       result_lo8518_BITS_31_TO_24__q69,
	       result_lo8518_BITS_39_TO_32__q70,
	       result_lo8518_BITS_47_TO_40__q73,
	       result_lo8518_BITS_55_TO_48__q74,
	       result_lo8518_BITS_63_TO_56__q76,
	       result_lo8518_BITS_7_TO_0__q63,
	       strobe64__h5583,
	       strobe64__h5587,
	       strobe64__h5591,
	       strobe64__h5595;
  wire [6 : 0] cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d297;
  wire [5 : 0] access_exc_code__h5081,
	       page_fault_exc_code__h5082,
	       shift_bits__h5354;
  wire [4 : 0] IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1295,
	       IF_NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache__ETC___d1294,
	       IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1293,
	       IF_cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_ETC___d1297,
	       IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1296,
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d296;
  wire [3 : 0] b__h46947;
  wire [2 : 0] cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d295;
  wire [1 : 0] tmp__h50714, tmp__h50715;
  wire IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d470,
       IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2027,
       IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2032,
       NOT_IF_cache_w_req_width_code_whas__933_THEN_c_ETC___d2011,
       NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363,
       NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511,
       NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533,
       NOT_cache_f_reset_reqs_notEmpty__75_75_AND_cac_ETC___d1586,
       NOT_cache_masterPortShim_rff_first__342_BIT_4__ETC___d1372,
       NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d468,
       NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d551,
       NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d915,
       NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d921,
       NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251,
       NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1263,
       NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1288,
       NOT_cache_rg_op_11_EQ_1_35_62_AND_NOT_cache_rg_ETC___d1284,
       NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1221,
       NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1249,
       NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1255,
       NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1261,
       NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d969,
       NOT_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_ETC___d1238,
       _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593,
       cache_aw_events_wires_ifc_ifc_wires_4_whas__0__ETC___d273,
       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d245,
       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d265,
       cache_dw_commit_whas__46_AND_cache_dw_commit_w_ETC___d968,
       cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1418,
       cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1453,
       cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1459,
       cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1408,
       cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1420,
       cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1356,
       cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1756,
       cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458,
       cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464,
       cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d548,
       cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567,
       cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d901,
       cache_rg_amo_funct5_14_EQ_0b10_15_AND_cache_ra_ETC___d907,
       cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442,
       cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1308,
       cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1313,
       cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d553,
       cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d572,
       cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d575,
       cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578,
       cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d1223,
       cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d570,
       cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d972,
       cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d1268,
       cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d452,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1225,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1276,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d903,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d917,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d929,
       cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d974,
       cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549,
       lrsc_result__h37449,
       mem_req_wr_second_data_wuser__h5466;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get =
	     !cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // action method commit
  assign CAN_FIRE_commit = 1'd1 ;
  assign WILL_FIRE_commit = EN_commit ;

  // value method valid
  assign valid = cache_dw_valid$whas && cache_dw_valid$wget ;

  // value method addr
  assign addr = cache_rg_addr ;

  // value method cword_fst
  assign cword_fst =
	     cache_dw_output_ld_val$whas && cache_dw_output_ld_val$wget[128] ;

  // value method cword_snd
  assign cword_snd = cache_dw_output_ld_val$wget[127:0] ;

  // value method st_amo_val_fst
  assign st_amo_val_fst =
	     cache_dw_output_st_amo_val$whas &&
	     cache_dw_output_st_amo_val$wget[128] ;

  // value method st_amo_val_snd
  assign st_amo_val_snd = cache_dw_output_st_amo_val$wget[127:0] ;

  // value method exc
  assign exc = CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // value method exc_code
  assign exc_code = cache_rg_exc_code ;

  // action method server_flush_request_put
  assign RDY_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign CAN_FIRE_server_flush_request_put = cache_f_reset_reqs$FULL_N ;
  assign WILL_FIRE_server_flush_request_put = EN_server_flush_request_put ;

  // action method server_flush_response_get
  assign RDY_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign CAN_FIRE_server_flush_response_get =
	     cache_f_reset_rsps$D_OUT && cache_f_reset_rsps$EMPTY_N ;
  assign WILL_FIRE_server_flush_response_get = EN_server_flush_response_get ;

  // action method tlb_flush
  assign RDY_tlb_flush = 1'd1 ;
  assign CAN_FIRE_tlb_flush = 1'd1 ;
  assign WILL_FIRE_tlb_flush = EN_tlb_flush ;

  // value method mem_master_aw_canPeek
  assign mem_master_aw_canPeek = cache_masterPortShim_awff$EMPTY_N ;

  // value method mem_master_aw_peek
  assign mem_master_aw_peek = cache_masterPortShim_awff$D_OUT ;
  assign RDY_mem_master_aw_peek = cache_masterPortShim_awff$EMPTY_N ;

  // action method mem_master_aw_drop
  assign RDY_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign CAN_FIRE_mem_master_aw_drop = cache_masterPortShim_awff$EMPTY_N ;
  assign WILL_FIRE_mem_master_aw_drop = EN_mem_master_aw_drop ;

  // value method mem_master_w_canPeek
  assign mem_master_w_canPeek = cache_masterPortShim_wff$EMPTY_N ;

  // value method mem_master_w_peek
  assign mem_master_w_peek = cache_masterPortShim_wff$D_OUT ;
  assign RDY_mem_master_w_peek = cache_masterPortShim_wff$EMPTY_N ;

  // action method mem_master_w_drop
  assign RDY_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign CAN_FIRE_mem_master_w_drop = cache_masterPortShim_wff$EMPTY_N ;
  assign WILL_FIRE_mem_master_w_drop = EN_mem_master_w_drop ;

  // value method mem_master_b_canPut
  assign mem_master_b_canPut = cache_masterPortShim_bff$FULL_N ;

  // action method mem_master_b_put
  assign RDY_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign CAN_FIRE_mem_master_b_put = cache_masterPortShim_bff$FULL_N ;
  assign WILL_FIRE_mem_master_b_put = EN_mem_master_b_put ;

  // value method mem_master_ar_canPeek
  assign mem_master_ar_canPeek = cache_masterPortShim_arff$EMPTY_N ;

  // value method mem_master_ar_peek
  assign mem_master_ar_peek = cache_masterPortShim_arff$D_OUT ;
  assign RDY_mem_master_ar_peek = cache_masterPortShim_arff$EMPTY_N ;

  // action method mem_master_ar_drop
  assign RDY_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign CAN_FIRE_mem_master_ar_drop = cache_masterPortShim_arff$EMPTY_N ;
  assign WILL_FIRE_mem_master_ar_drop = EN_mem_master_ar_drop ;

  // value method mem_master_r_canPut
  assign mem_master_r_canPut = cache_masterPortShim_rff$FULL_N ;

  // action method mem_master_r_put
  assign RDY_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign CAN_FIRE_mem_master_r_put = cache_masterPortShim_rff$FULL_N ;
  assign WILL_FIRE_mem_master_r_put = EN_mem_master_r_put ;

  // value method events
  assign events = cache_aw_events_register ;
  assign RDY_events = 1'd1 ;

  // action method ma_ddr4_ready
  assign RDY_ma_ddr4_ready = 1'd1 ;
  assign CAN_FIRE_ma_ddr4_ready = 1'd1 ;
  assign WILL_FIRE_ma_ddr4_ready = EN_ma_ddr4_ready ;

  // value method mv_status
  assign mv_status = cache_rg_wr_rsp_err ? 8'd1 : 8'd0 ;

  // submodule cache_f_fabric_second_write_reqs
  FIFO1 #(.width(32'd74),
	  .guarded(1'd1)) cache_f_fabric_second_write_reqs(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(cache_f_fabric_second_write_reqs$D_IN),
							   .ENQ(cache_f_fabric_second_write_reqs$ENQ),
							   .DEQ(cache_f_fabric_second_write_reqs$DEQ),
							   .CLR(cache_f_fabric_second_write_reqs$CLR),
							   .D_OUT(cache_f_fabric_second_write_reqs$D_OUT),
							   .FULL_N(cache_f_fabric_second_write_reqs$FULL_N),
							   .EMPTY_N(cache_f_fabric_second_write_reqs$EMPTY_N));

  // submodule cache_f_fabric_write_reqs
  FIFO2 #(.width(32'd196),
	  .guarded(1'd1)) cache_f_fabric_write_reqs(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_f_fabric_write_reqs$D_IN),
						    .ENQ(cache_f_fabric_write_reqs$ENQ),
						    .DEQ(cache_f_fabric_write_reqs$DEQ),
						    .CLR(cache_f_fabric_write_reqs$CLR),
						    .D_OUT(cache_f_fabric_write_reqs$D_OUT),
						    .FULL_N(cache_f_fabric_write_reqs$FULL_N),
						    .EMPTY_N(cache_f_fabric_write_reqs$EMPTY_N));

  // submodule cache_f_pte_writebacks
  FIFO2 #(.width(32'd128), .guarded(1'd1)) cache_f_pte_writebacks(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(cache_f_pte_writebacks$D_IN),
								  .ENQ(cache_f_pte_writebacks$ENQ),
								  .DEQ(cache_f_pte_writebacks$DEQ),
								  .CLR(cache_f_pte_writebacks$CLR),
								  .D_OUT(cache_f_pte_writebacks$D_OUT),
								  .FULL_N(cache_f_pte_writebacks$FULL_N),
								  .EMPTY_N(cache_f_pte_writebacks$EMPTY_N));

  // submodule cache_f_reset_reqs
  FIFO2 #(.width(32'd1), .guarded(1'd1)) cache_f_reset_reqs(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_reset_reqs$D_IN),
							    .ENQ(cache_f_reset_reqs$ENQ),
							    .DEQ(cache_f_reset_reqs$DEQ),
							    .CLR(cache_f_reset_reqs$CLR),
							    .D_OUT(cache_f_reset_reqs$D_OUT),
							    .FULL_N(cache_f_reset_reqs$FULL_N),
							    .EMPTY_N(cache_f_reset_reqs$EMPTY_N));

  // submodule cache_f_reset_rsps
  FIFO2 #(.width(32'd1), .guarded(1'd1)) cache_f_reset_rsps(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(cache_f_reset_rsps$D_IN),
							    .ENQ(cache_f_reset_rsps$ENQ),
							    .DEQ(cache_f_reset_rsps$DEQ),
							    .CLR(cache_f_reset_rsps$CLR),
							    .D_OUT(cache_f_reset_rsps$D_OUT),
							    .FULL_N(cache_f_reset_rsps$FULL_N),
							    .EMPTY_N(cache_f_reset_rsps$EMPTY_N));

  // submodule cache_masterPortShim_arff
  FIFO2 #(.width(32'd97),
	  .guarded(1'd1)) cache_masterPortShim_arff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_arff$D_IN),
						    .ENQ(cache_masterPortShim_arff$ENQ),
						    .DEQ(cache_masterPortShim_arff$DEQ),
						    .CLR(cache_masterPortShim_arff$CLR),
						    .D_OUT(cache_masterPortShim_arff$D_OUT),
						    .FULL_N(cache_masterPortShim_arff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_arff$EMPTY_N));

  // submodule cache_masterPortShim_awff
  FIFO2 #(.width(32'd97),
	  .guarded(1'd1)) cache_masterPortShim_awff(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(cache_masterPortShim_awff$D_IN),
						    .ENQ(cache_masterPortShim_awff$ENQ),
						    .DEQ(cache_masterPortShim_awff$DEQ),
						    .CLR(cache_masterPortShim_awff$CLR),
						    .D_OUT(cache_masterPortShim_awff$D_OUT),
						    .FULL_N(cache_masterPortShim_awff$FULL_N),
						    .EMPTY_N(cache_masterPortShim_awff$EMPTY_N));

  // submodule cache_masterPortShim_bff
  FIFO2 #(.width(32'd6), .guarded(1'd1)) cache_masterPortShim_bff(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(cache_masterPortShim_bff$D_IN),
								  .ENQ(cache_masterPortShim_bff$ENQ),
								  .DEQ(cache_masterPortShim_bff$DEQ),
								  .CLR(cache_masterPortShim_bff$CLR),
								  .D_OUT(cache_masterPortShim_bff$D_OUT),
								  .FULL_N(cache_masterPortShim_bff$FULL_N),
								  .EMPTY_N(cache_masterPortShim_bff$EMPTY_N));

  // submodule cache_masterPortShim_rff
  FIFO2 #(.width(32'd72),
	  .guarded(1'd1)) cache_masterPortShim_rff(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(cache_masterPortShim_rff$D_IN),
						   .ENQ(cache_masterPortShim_rff$ENQ),
						   .DEQ(cache_masterPortShim_rff$DEQ),
						   .CLR(cache_masterPortShim_rff$CLR),
						   .D_OUT(cache_masterPortShim_rff$D_OUT),
						   .FULL_N(cache_masterPortShim_rff$FULL_N),
						   .EMPTY_N(cache_masterPortShim_rff$EMPTY_N));

  // submodule cache_masterPortShim_wff
  FIFO2 #(.width(32'd74),
	  .guarded(1'd1)) cache_masterPortShim_wff(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(cache_masterPortShim_wff$D_IN),
						   .ENQ(cache_masterPortShim_wff$ENQ),
						   .DEQ(cache_masterPortShim_wff$DEQ),
						   .CLR(cache_masterPortShim_wff$CLR),
						   .D_OUT(cache_masterPortShim_wff$D_OUT),
						   .FULL_N(cache_masterPortShim_wff$FULL_N),
						   .EMPTY_N(cache_masterPortShim_wff$EMPTY_N));

  // submodule cache_ram_cword_set
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd258),
	  .MEMSIZE(9'd256)) cache_ram_cword_set(.CLKA(CLK),
						.CLKB(CLK),
						.ADDRA(cache_ram_cword_set$ADDRA),
						.ADDRB(cache_ram_cword_set$ADDRB),
						.DIA(cache_ram_cword_set$DIA),
						.DIB(cache_ram_cword_set$DIB),
						.WEA(cache_ram_cword_set$WEA),
						.WEB(cache_ram_cword_set$WEB),
						.ENA(cache_ram_cword_set$ENA),
						.ENB(cache_ram_cword_set$ENB),
						.DOA(),
						.DOB(cache_ram_cword_set$DOB));

  // submodule cache_ram_state_and_ctag_cset
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd106),
	  .MEMSIZE(7'd64)) cache_ram_state_and_ctag_cset(.CLKA(CLK),
							 .CLKB(CLK),
							 .ADDRA(cache_ram_state_and_ctag_cset$ADDRA),
							 .ADDRB(cache_ram_state_and_ctag_cset$ADDRB),
							 .DIA(cache_ram_state_and_ctag_cset$DIA),
							 .DIB(cache_ram_state_and_ctag_cset$DIB),
							 .WEA(cache_ram_state_and_ctag_cset$WEA),
							 .WEB(cache_ram_state_and_ctag_cset$WEB),
							 .ENA(cache_ram_state_and_ctag_cset$ENA),
							 .ENB(cache_ram_state_and_ctag_cset$ENB),
							 .DOA(),
							 .DOB(cache_ram_state_and_ctag_cset$DOB));

  // submodule cache_soc_map
  mkSoC_Map cache_soc_map(.CLK(CLK),
			  .RST_N(RST_N),
			  .m_is_IO_addr_addr(cache_soc_map$m_is_IO_addr_addr),
			  .m_is_mem_addr_addr(cache_soc_map$m_is_mem_addr_addr),
			  .m_is_near_mem_IO_addr_addr(cache_soc_map$m_is_near_mem_IO_addr_addr),
			  .m_plic_addr_range(),
			  .m_near_mem_io_addr_range(),
			  .m_ethernet_0_addr_range(),
			  .m_dma_0_addr_range(),
			  .m_uart16550_0_addr_range(),
			  .m_uart16550_1_addr_range(),
			  .m_iic_0_addr_range(),
			  .m_axi_quad_spi_0_full_addr_range(),
			  .m_axi_quad_spi_0_lite_addr_range(),
			  .m_axi_quad_spi_1_addr_range(),
			  .m_gpio_0_addr_range(),
			  .m_gpio_1_addr_range(),
			  .m_boot_rom_addr_range(),
			  .m_ddr4_0_uncached_addr_range(),
			  .m_ddr4_0_cached_addr_range(),
			  .m_is_mem_addr(cache_soc_map$m_is_mem_addr),
			  .m_is_IO_addr(),
			  .m_is_near_mem_IO_addr(),
			  .m_pc_reset_value(),
			  .m_pcc_reset_value(),
			  .m_ddc_reset_value(),
			  .m_mtcc_reset_value(),
			  .m_mepcc_reset_value(),
			  .m_mtvec_reset_value(),
			  .m_nmivec_reset_value());

  // submodule cache_tlb
  mkTLB #(.dmem_not_imem(1'd1), .verbosity(3'd2)) cache_tlb(.CLK(CLK),
							    .RST_N(RST_N),
							    .ma_insert_asid(cache_tlb$ma_insert_asid),
							    .ma_insert_level(cache_tlb$ma_insert_level),
							    .ma_insert_pte(cache_tlb$ma_insert_pte),
							    .ma_insert_pte_pa(cache_tlb$ma_insert_pte_pa),
							    .ma_insert_vpn(cache_tlb$ma_insert_vpn),
							    .mv_vm_get_xlate_cap(cache_tlb$mv_vm_get_xlate_cap),
							    .mv_vm_get_xlate_mstatus_MXR(cache_tlb$mv_vm_get_xlate_mstatus_MXR),
							    .mv_vm_get_xlate_priv(cache_tlb$mv_vm_get_xlate_priv),
							    .mv_vm_get_xlate_read_not_write(cache_tlb$mv_vm_get_xlate_read_not_write),
							    .mv_vm_get_xlate_satp(cache_tlb$mv_vm_get_xlate_satp),
							    .mv_vm_get_xlate_sstatus_SUM(cache_tlb$mv_vm_get_xlate_sstatus_SUM),
							    .mv_vm_put_va_full_va(cache_tlb$mv_vm_put_va_full_va),
							    .EN_mv_vm_put_va(cache_tlb$EN_mv_vm_put_va),
							    .EN_ma_insert(cache_tlb$EN_ma_insert),
							    .EN_ma_flush(cache_tlb$EN_ma_flush),
							    .RDY_mv_vm_put_va(),
							    .mv_vm_get_xlate(cache_tlb$mv_vm_get_xlate),
							    .RDY_mv_vm_get_xlate(),
							    .RDY_ma_insert(),
							    .RDY_ma_flush());

  // rule RL_cache_rl_fabric_send_second_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_second_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_fabric_send_write_req
  assign CAN_FIRE_RL_cache_rl_fabric_send_write_req =
	     cache_ctr_wr_rsps_pending_crg != 4'd15 &&
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_write_reqs$EMPTY_N &&
	     cache_masterPortShim_awff$FULL_N &&
	     (cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100 ||
	      cache_f_fabric_second_write_reqs$FULL_N) ;
  assign WILL_FIRE_RL_cache_rl_fabric_send_write_req =
	     CAN_FIRE_RL_cache_rl_fabric_send_write_req &&
	     !WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ;

  // rule RL_cache_rl_count_tlb_latency
  assign CAN_FIRE_RL_cache_rl_count_tlb_latency =
	     cache_rg_state == 5'd5 || cache_rg_tlb_walk ;
  assign WILL_FIRE_RL_cache_rl_count_tlb_latency =
	     CAN_FIRE_RL_cache_rl_count_tlb_latency ;

  // rule RL_cache_rl_count_miss_lat
  assign CAN_FIRE_RL_cache_rl_count_miss_lat =
	     !cache_f_reset_reqs$EMPTY_N &&
	     (cache_rg_state == 5'd9 || cache_rg_cache_rereq_data) ;
  assign WILL_FIRE_RL_cache_rl_count_miss_lat =
	     CAN_FIRE_RL_cache_rl_count_miss_lat ;

  // rule RL_cache_rl_reset
  assign CAN_FIRE_RL_cache_rl_reset =
	     (cache_rg_cset_in_cache != 6'd63 ||
	      cache_f_reset_reqs$EMPTY_N && cache_f_reset_rsps$FULL_N) &&
	     cache_rg_state == 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_reset = CAN_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_rl_probe_and_immed_rsp
  assign CAN_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     (cache_tlb$mv_vm_get_xlate[203:202] == 2'd1 ||
	      cache_tlb$mv_vm_get_xlate[203:202] == 2'd2 ||
	      (!cache_tlb$mv_vm_get_xlate[130] ||
	       cache_f_pte_writebacks$FULL_N) &&
	      (!cache_soc_map$m_is_mem_addr || cache_rg_op == 2'd0 ||
	       cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ||
	       IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d470)) &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_ddr4_ready &&
	     cache_rg_state == 5'd3 ;
  assign WILL_FIRE_RL_cache_rl_probe_and_immed_rsp =
	     CAN_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_start_tlb_refill
  assign CAN_FIRE_RL_cache_rl_start_tlb_refill =
	     cache_masterPortShim_arff$FULL_N && cache_rg_state == 5'd5 &&
	     b__h46947 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_tlb_refill =
	     CAN_FIRE_RL_cache_rl_start_tlb_refill &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_2
  assign CAN_FIRE_RL_cache_rl_ptw_level_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1356 &&
	     cache_rg_state == 5'd6 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_2 =
	     CAN_FIRE_RL_cache_rl_ptw_level_2 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_1
  assign CAN_FIRE_RL_cache_rl_ptw_level_1 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1356 &&
	     cache_rg_state == 5'd7 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_1 =
	     CAN_FIRE_RL_cache_rl_ptw_level_1 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_ptw_level_0
  assign CAN_FIRE_RL_cache_rl_ptw_level_0 =
	     cache_masterPortShim_rff$EMPTY_N && cache_rg_state == 5'd8 ;
  assign WILL_FIRE_RL_cache_rl_ptw_level_0 =
	     CAN_FIRE_RL_cache_rl_ptw_level_0 &&
	     !WILL_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_start_cache_refill
  assign CAN_FIRE_RL_cache_rl_start_cache_refill =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd9 &&
	     b__h46947 == 4'd0 ;
  assign WILL_FIRE_RL_cache_rl_start_cache_refill =
	     CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // rule RL_cache_rl_cache_refill_rsps_loop
  assign CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd10 ;
  assign WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop =
	     CAN_FIRE_RL_cache_rl_cache_refill_rsps_loop ;

  // rule RL_cache_rl_rereq
  assign CAN_FIRE_RL_cache_rl_rereq =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd11 ;
  assign WILL_FIRE_RL_cache_rl_rereq = CAN_FIRE_RL_cache_rl_rereq ;

  // rule RL_cache_rl_ST_AMO_response
  assign CAN_FIRE_RL_cache_rl_ST_AMO_response = cache_rg_state == 5'd12 ;
  assign WILL_FIRE_RL_cache_rl_ST_AMO_response =
	     CAN_FIRE_RL_cache_rl_ST_AMO_response ;

  // rule RL_cache_rl_io_read_req
  assign CAN_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;
  assign WILL_FIRE_RL_cache_rl_io_read_req =
	     MUX_cache_rg_state$write_1__SEL_9 ;

  // rule RL_cache_rl_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;
  assign WILL_FIRE_RL_cache_rl_io_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_3 ;

  // rule RL_cache_rl_maintain_io_read_rsp
  assign CAN_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd15 ;
  assign WILL_FIRE_RL_cache_rl_maintain_io_read_rsp =
	     CAN_FIRE_RL_cache_rl_maintain_io_read_rsp ;

  // rule RL_cache_rl_io_write_req
  assign CAN_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;
  assign WILL_FIRE_RL_cache_rl_io_write_req =
	     MUX_cache_rg_state$write_1__SEL_7 ;

  // rule RL_cache_rl_io_AMO_SC_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_SC_req =
	     MUX_cache_rg_state$write_1__SEL_6 ;

  // rule RL_cache_rl_io_AMO_op_req
  assign CAN_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_5 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_op_req =
	     MUX_cache_rg_state$write_1__SEL_5 ;

  // rule RL_cache_rl_writeback_updated_PTE
  assign CAN_FIRE_RL_cache_rl_writeback_updated_PTE =
	     cache_f_pte_writebacks$EMPTY_N &&
	     cache_f_fabric_write_reqs$FULL_N ;
  assign WILL_FIRE_RL_cache_rl_writeback_updated_PTE =
	     CAN_FIRE_RL_cache_rl_writeback_updated_PTE &&
	     !WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     !WILL_FIRE_RL_cache_rl_io_write_req &&
	     !WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // rule RL_cache_rl_io_AMO_read_rsp
  assign CAN_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;
  assign WILL_FIRE_RL_cache_rl_io_AMO_read_rsp =
	     MUX_cache_rg_exc_code$write_1__PSEL_2 ;

  // rule RL_cache_rl_discard_write_rsp
  assign CAN_FIRE_RL_cache_rl_discard_write_rsp =
	     b__h46947 != 4'd0 && cache_masterPortShim_bff$EMPTY_N ;
  assign WILL_FIRE_RL_cache_rl_discard_write_rsp =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;

  // rule RL_cache_rl_start_reset
  assign CAN_FIRE_RL_cache_rl_start_reset =
	     cache_f_reset_reqs$EMPTY_N && cache_rg_state != 5'd1 ;
  assign WILL_FIRE_RL_cache_rl_start_reset =
	     CAN_FIRE_RL_cache_rl_start_reset ;

  // rule RL_cache_rl_drive_exception_rsp
  assign CAN_FIRE_RL_cache_rl_drive_exception_rsp =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd4 ;
  assign WILL_FIRE_RL_cache_rl_drive_exception_rsp =
	     CAN_FIRE_RL_cache_rl_drive_exception_rsp ;

  // rule RL_cache_do_req
  assign CAN_FIRE_RL_cache_do_req = EN_req && !cache_f_reset_reqs$EMPTY_N ;
  assign WILL_FIRE_RL_cache_do_req =
	     CAN_FIRE_RL_cache_do_req && !WILL_FIRE_RL_cache_rl_reset ;

  // rule RL_cache_do_set_req_valid
  assign CAN_FIRE_RL_cache_do_set_req_valid = 1'd1 ;
  assign WILL_FIRE_RL_cache_do_set_req_valid = 1'd1 ;

  // rule RL_cache_do_reset_req
  assign CAN_FIRE_RL_cache_do_reset_req =
	     cache_f_reset_reqs$FULL_N && cache_rw_reset_req$whas ;
  assign WILL_FIRE_RL_cache_do_reset_req = CAN_FIRE_RL_cache_do_reset_req ;

  // rule RL_cache_do_tlb_flush
  assign CAN_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;
  assign WILL_FIRE_RL_cache_do_tlb_flush = EN_tlb_flush ;

  // rule __me_check_26
  assign CAN_FIRE___me_check_26 = 1'b1 ;
  assign WILL_FIRE___me_check_26 = 1'b1 ;

  // rule RL_cache_aw_events_update_reg
  assign CAN_FIRE_RL_cache_aw_events_update_reg = 1'd1 ;
  assign WILL_FIRE_RL_cache_aw_events_update_reg = 1'd1 ;

  // inputs to muxes for submodule ports
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign MUX_cache_dw_valid$wset_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578 ;
  assign MUX_cache_dw_valid$wset_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1225 ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ;
  assign MUX_cache_masterPortShim_arff$enq_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ;
  assign MUX_cache_ram_cword_set$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d974 ;
  assign MUX_cache_ram_cword_set$b_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     (IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2027 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) ;
  assign MUX_cache_ram_cword_set$b_put_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign MUX_cache_rg_error_during_refill$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_IF_cache_w_req_width_code_whas__933_THEN_c_ETC___d2011 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_2 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1756 &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd16 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__PSEL_3 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd14 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign MUX_cache_rg_exc_code$write_1__SEL_5 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_6 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_exc_code$write_1__SEL_7 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__342_BIT_4__ETC___d1372 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d929 ;
  assign MUX_cache_rg_ld_val$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ;
  assign MUX_cache_rg_lower_word64_full$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign MUX_cache_rg_lrsc_valid$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d572 ;
  assign MUX_cache_rg_pa$write_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 ;
  assign MUX_cache_rg_state$write_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_5 =
	     cache_masterPortShim_arff$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 != 5'b00010 &&
	     cache_rg_amo_funct5 != 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_6 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 ;
  assign MUX_cache_rg_state$write_1__SEL_7 =
	     cache_f_fabric_write_reqs$FULL_N &&
	     !cache_f_reset_reqs$EMPTY_N &&
	     cache_rg_state == 5'd13 &&
	     cache_rg_op == 2'd1 ;
  assign MUX_cache_rg_state$write_1__SEL_8 =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ;
  assign MUX_cache_rg_state$write_1__SEL_9 =
	     cache_masterPortShim_arff$FULL_N &&
	     NOT_cache_f_reset_reqs_notEmpty__75_75_AND_cac_ETC___d1586 &&
	     b__h46947 == 4'd0 ;
  assign MUX_cache_rg_state$write_1__SEL_11 =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd3 ;
  assign MUX_cache_rg_state$write_1__SEL_18 =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign MUX_cache_tlb$ma_insert_1__SEL_1 =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_tlb$mv_vm_get_xlate[130] ;
  assign MUX_cache_tlb$ma_insert_1__SEL_2 =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1418 ;
  assign MUX_cache_tlb$ma_insert_1__SEL_3 =
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign MUX_cache_tlb$ma_insert_1__SEL_4 =
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_1 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       { cache_tlb$mv_vm_get_xlate[201] &&
		 cache_rg_width_code == 3'b100 &&
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[128],
		 x__h35451 } :
	       { 65'd0, _theResult___fst__h41041 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_2 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       { 65'd0, _theResult___fst__h55527 } :
	       { 1'd0, b__h51868 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_3 = { 1'd0, x__h60453 } ;
  assign MUX_cache_dw_output_ld_val$wset_1__VAL_4 =
	     { cache_rg_allow_cap && cache_rg_ld_val[128],
	       cache_rg_ld_val[127:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 =
	     { cache_rg_width_code,
	       cache_tlb$mv_vm_get_xlate[200:137],
	       IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1228 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 =
	     { cache_rg_width_code,
	       cache_rg_pa,
	       cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       x__h58326 } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 =
	     { 3'b011,
	       cache_f_pte_writebacks$D_OUT[127:64],
	       65'd0,
	       cache_f_pte_writebacks$D_OUT[63:0] } ;
  assign MUX_cache_f_fabric_write_reqs$enq_1__VAL_4 =
	     { cache_rg_width_code, cache_rg_pa, cache_rg_st_amo_val } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_1 =
	     { 4'd0, lev_1_pte_pa_w64_fa__h47999, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_2 =
	     { 4'd0, lev_0_pte_pa_w64_fa__h49112, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_3 =
	     { 4'd0,
	       cache_rg_pa,
	       _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 ?
		 { 8'd0, size_val__h57519, 18'd65536 } :
		 29'd2949120 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_4 =
	     { 4'd0, lev_2_pte_pa_w64_fa__h47044, 29'd851968 } ;
  assign MUX_cache_masterPortShim_arff$enq_1__VAL_5 =
	     { 4'd0, cline_fabric_addr__h50561, 29'd15532032 } ;
  assign MUX_cache_masterPortShim_wff$enq_1__VAL_2 =
	     { mem_req_wr_data_wdata__h5638,
	       mem_req_wr_data_wstrb__h5639,
	       cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100,
	       mem_req_wr_second_data_wuser__h5466 } ;
  assign MUX_cache_ram_cword_set$a_put_3__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1100,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1101 } :
	       { IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1217,
		 IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1218 } ;
  assign MUX_cache_ram_cword_set$a_put_3__VAL_2 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64,
		 cache_ram_cword_set$DOB[128:0] } :
	       { cache_ram_cword_set$DOB[257:129],
		 cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign MUX_cache_ram_cword_set$b_put_2__VAL_2 =
	     cache_rg_cset_cword_in_cache + 8'd1 ;
  assign MUX_cache_ram_cword_set$b_put_2__VAL_4 =
	     { cache_rg_addr[11:6], 2'd0 } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 =
	     { cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[105],
	       cache_rg_victim_way ?
		 cache_rg_pa[63:12] :
		 cache_ram_state_and_ctag_cset$DOB[104:53],
	       !cache_rg_victim_way || cache_ram_state_and_ctag_cset$DOB[52],
	       cache_rg_victim_way ?
		 cache_ram_state_and_ctag_cset$DOB[51:0] :
		 cache_rg_pa[63:12] } ;
  assign MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 =
	     { 1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ,
	       1'd0,
	       52'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign MUX_cache_rg_cset_in_cache$write_1__VAL_1 =
	     cache_rg_cset_in_cache + 6'd1 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_1 =
	     (req_op == 2'd0) ? 6'd4 : 6'd6 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_4 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd5 :
	       6'd7 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_5 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       page_fault_exc_code__h5082 :
	       access_exc_code__h5081 ;
  assign MUX_cache_rg_exc_code$write_1__VAL_8 =
	     EN_commit ? x1_avValue_snd_snd__h46483 : 6'd28 ;
  assign MUX_cache_rg_ld_val$write_1__VAL_1 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       { 128'd0, lrsc_result__h37449 } :
	       { cache_rg_width_code == 3'b100 &&
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[128],
		 x__h46309 } ;
  assign MUX_cache_rg_lower_word64_full$write_1__VAL_2 =
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_1 =
	     lev_1_PTN_pa__h47995 + vpn_1_pa__h47996 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_2 =
	     lev_1_PTN_pa__h47995 + vpn_0_pa__h49109 ;
  assign MUX_cache_rg_pte_pa$write_1__VAL_3 =
	     satp_pa__h2304 + vpn_2_pa__h47041 ;
  assign MUX_cache_rg_st_amo_val$write_1__VAL_2 =
	     { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
	       IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146 } ;
  assign MUX_cache_rg_state$write_1__VAL_2 =
	     (NOT_IF_cache_w_req_width_code_whas__933_THEN_c_ETC___d2011 &&
	      (req_width_code != 3'b100 || req_addr[3:0] != 4'b0)) ?
	       5'd4 :
	       5'd3 ;
  assign MUX_cache_rg_state$write_1__VAL_4 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ? 5'd15 : 5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_8 =
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1]) ?
	       ((cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
		  5'd15 :
		  5'd4) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_11 =
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      cache_rg_error_during_refill) ?
	       5'd4 :
	       5'd11 ;
  assign MUX_cache_rg_state$write_1__VAL_13 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6] ||
		 !cache_masterPortShim_rff$D_OUT[7] &&
		 !cache_masterPortShim_rff$D_OUT[5]) ?
		  5'd4 :
		  5'd11) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_14 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd8 :
		     ((cache_masterPortShim_rff$D_OUT[22:14] == 9'd0) ?
			5'd11 :
			5'd4))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_15 =
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ?
	       ((!cache_masterPortShim_rff$D_OUT[4] ||
		 !cache_masterPortShim_rff$D_OUT[5] &&
		 cache_masterPortShim_rff$D_OUT[6]) ?
		  5'd4 :
		  ((!cache_masterPortShim_rff$D_OUT[7] &&
		    !cache_masterPortShim_rff$D_OUT[5]) ?
		     5'd7 :
		     ((cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
		       cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ?
			5'd4 :
			5'd11))) :
	       5'd4 ;
  assign MUX_cache_rg_state$write_1__VAL_17 =
	     EN_commit ?
	       CASE_cache_tlbmv_vm_get_xlate_BITS_203_TO_202_ETC__q78 :
	       5'd4 ;

  // inlined wires
  assign cache_rw_reset_req$whas =
	     EN_server_reset_request_put || EN_server_flush_request_put ;
  assign cache_dw_valid$wget =
	     !MUX_cache_dw_valid$wset_1__SEL_1 || EN_commit ;
  assign cache_dw_valid$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_drive_exception_rsp ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  always@(MUX_cache_dw_valid$wset_1__SEL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_1 or
	  MUX_cache_dw_valid$wset_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_4 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_dw_valid$wset_1__SEL_1:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_1;
      MUX_cache_dw_valid$wset_1__SEL_2:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      MUX_cache_dw_output_ld_val$wset_1__SEL_4:
	  cache_dw_output_ld_val$wget =
	      MUX_cache_dw_output_ld_val$wset_1__VAL_4;
      default: cache_dw_output_ld_val$wget =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_dw_output_ld_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_maintain_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_dw_output_st_amo_val$wget =
	     MUX_cache_dw_valid$wset_1__SEL_1 ? 129'd0 : cache_rg_st_amo_val ;
  assign cache_dw_output_st_amo_val$whas =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578 ||
	     WILL_FIRE_RL_cache_rl_ST_AMO_response ;
  assign cache_aw_events_wires_ifc_ifc_wires_1$wget =
	     { 1'd0,
	       cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	       cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	       cache_soc_map$m_is_mem_addr &&
	       cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1308,
	       5'd0,
	       cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	       cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	       cache_soc_map$m_is_mem_addr &&
	       cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1313,
	       1'd0,
	       cache_rg_mem_req_sent,
	       cache_rg_mem_req_sent &&
	       cache_tlb$mv_vm_get_xlate[203:202] == 2'd1,
	       cache_rg_mem_req_sent &&
	       cache_tlb$mv_vm_get_xlate[203:202] == 2'd1,
	       2'd0 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_3$wget =
	     { 2'd0, cache_rg_op == 2'd0, 5'd0, cache_rg_op == 2'd2, 5'd0 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_4$wget =
	     { 13'd0,
	       CASE_cache_rg_victim_way_0_cache_ram_state_and_ETC__q1 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_6$wget =
	     { req_op == 2'd0,
	       2'd0,
	       req_op == 2'd1,
	       2'd0,
	       req_op == 2'd2,
	       7'd0 } ;
  assign cache_ctr_wr_rsps_pending_crg$port0__write_1 =
	     cache_ctr_wr_rsps_pending_crg + 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port1__read =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ?
	       cache_ctr_wr_rsps_pending_crg$port0__write_1 :
	       cache_ctr_wr_rsps_pending_crg ;
  assign cache_ctr_wr_rsps_pending_crg$port1__write_1 = b__h46947 - 4'd1 ;
  assign cache_ctr_wr_rsps_pending_crg$port2__read =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ?
	       cache_ctr_wr_rsps_pending_crg$port1__write_1 :
	       cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN_port2__write =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;
  assign cache_ctr_wr_rsps_pending_crg$port3__read =
	     cache_ctr_wr_rsps_pending_crg$EN_port2__write ?
	       4'd0 :
	       cache_ctr_wr_rsps_pending_crg$port2__read ;

  // register cache_aw_events_register
  assign cache_aw_events_register$D_IN =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[13]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[13]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[13]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[13]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d300 } ;
  assign cache_aw_events_register$EN = 1'd1 ;

  // register cache_cfg_verbosity
  assign cache_cfg_verbosity$D_IN = set_verbosity_verbosity ;
  assign cache_cfg_verbosity$EN = EN_set_verbosity ;

  // register cache_ctr_wr_rsps_pending_crg
  assign cache_ctr_wr_rsps_pending_crg$D_IN =
	     cache_ctr_wr_rsps_pending_crg$port3__read ;
  assign cache_ctr_wr_rsps_pending_crg$EN = 1'b1 ;

  // register cache_rg_addr
  assign cache_rg_addr$D_IN = req_addr ;
  assign cache_rg_addr$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_allow_cap
  assign cache_rg_allow_cap$D_IN = cache_tlb$mv_vm_get_xlate[201] ;
  assign cache_rg_allow_cap$EN = MUX_cache_rg_pa$write_1__SEL_2 ;

  // register cache_rg_amo_funct5
  assign cache_rg_amo_funct5$D_IN = req_amo_funct5 ;
  assign cache_rg_amo_funct5$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_cache_rereq_data
  assign cache_rg_cache_rereq_data$D_IN = cache_rg_state != 5'd3 ;
  assign cache_rg_cache_rereq_data$EN = CAN_FIRE_RL_cache_rl_count_miss_lat ;

  // register cache_rg_cset_cword_in_cache
  assign cache_rg_cset_cword_in_cache$D_IN =
	     MUX_cache_ram_cword_set$b_put_1__SEL_2 ?
	       MUX_cache_ram_cword_set$b_put_2__VAL_2 :
	       MUX_cache_ram_cword_set$b_put_2__VAL_4 ;
  assign cache_rg_cset_cword_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_cset_in_cache
  assign cache_rg_cset_in_cache$D_IN =
	     WILL_FIRE_RL_cache_rl_reset ?
	       MUX_cache_rg_cset_in_cache$write_1__VAL_1 :
	       6'd0 ;
  assign cache_rg_cset_in_cache$EN =
	     WILL_FIRE_RL_cache_rl_reset ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_ddr4_ready
  assign cache_rg_ddr4_ready$D_IN = 1'd1 ;
  assign cache_rg_ddr4_ready$EN = EN_ma_ddr4_ready ;

  // register cache_rg_error_during_refill
  assign cache_rg_error_during_refill$D_IN =
	     MUX_cache_rg_error_during_refill$write_1__SEL_1 ;
  assign cache_rg_error_during_refill$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_exc_code
  always@(MUX_cache_rg_exc_code$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_1 or
	  MUX_cache_rg_exc_code$write_1__SEL_2 or
	  MUX_cache_rg_exc_code$write_1__SEL_3 or
	  MUX_cache_rg_error_during_refill$write_1__SEL_1 or
	  MUX_cache_rg_exc_code$write_1__VAL_4 or
	  MUX_cache_rg_exc_code$write_1__SEL_5 or
	  MUX_cache_rg_exc_code$write_1__VAL_5 or
	  MUX_cache_rg_exc_code$write_1__SEL_6 or
	  MUX_cache_rg_exc_code$write_1__SEL_7 or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_exc_code$write_1__VAL_8)
  case (1'b1)
    MUX_cache_rg_exc_code$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_1;
    MUX_cache_rg_exc_code$write_1__SEL_2: cache_rg_exc_code$D_IN = 6'd7;
    MUX_cache_rg_exc_code$write_1__SEL_3: cache_rg_exc_code$D_IN = 6'd5;
    MUX_cache_rg_error_during_refill$write_1__SEL_1:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_4;
    MUX_cache_rg_exc_code$write_1__SEL_5:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_6:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    MUX_cache_rg_exc_code$write_1__SEL_7:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_5;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_exc_code$D_IN = MUX_cache_rg_exc_code$write_1__VAL_8;
    default: cache_rg_exc_code$D_IN = 6'bxxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_exc_code$EN =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_do_req &&
	     NOT_IF_cache_w_req_width_code_whas__933_THEN_c_ETC___d2011 &&
	     (req_width_code != 3'b100 || req_addr[3:0] != 4'b0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     NOT_cache_masterPortShim_rff_first__342_BIT_4__ETC___d1372 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      (cache_masterPortShim_rff$D_OUT[7] ||
	       cache_masterPortShim_rff$D_OUT[5]) &&
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     (!cache_masterPortShim_rff$D_OUT[4] ||
	      !cache_masterPortShim_rff$D_OUT[5] &&
	      cache_masterPortShim_rff$D_OUT[6] ||
	      !cache_masterPortShim_rff$D_OUT[7] &&
	      !cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[1] &&
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ;

  // register cache_rg_is_unsigned
  assign cache_rg_is_unsigned$D_IN = req_is_unsigned ;
  assign cache_rg_is_unsigned$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_ld_val
  always@(MUX_cache_rg_ld_val$write_1__SEL_1 or
	  MUX_cache_rg_ld_val$write_1__VAL_1 or
	  MUX_cache_rg_ld_val$write_1__SEL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_2 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_dw_output_ld_val$wset_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_ld_val$write_1__SEL_1:
	  cache_rg_ld_val$D_IN = MUX_cache_rg_ld_val$write_1__VAL_1;
      MUX_cache_rg_ld_val$write_1__SEL_2:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_2;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_rg_ld_val$D_IN = MUX_cache_dw_output_ld_val$wset_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_AMO_SC_req: cache_rg_ld_val$D_IN = 129'd1;
      default: cache_rg_ld_val$D_IN =
		   129'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_ld_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d929 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] == 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ;

  // register cache_rg_lower_word64
  assign cache_rg_lower_word64$D_IN = cache_masterPortShim_rff$D_OUT[67:4] ;
  assign cache_rg_lower_word64$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     !cache_masterPortShim_rff$D_OUT[1] ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     !cache_rg_lower_word64_full ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     !cache_rg_lower_word64_full &&
	     !cache_masterPortShim_rff$D_OUT[1] ;

  // register cache_rg_lower_word64_full
  always@(MUX_cache_rg_lower_word64_full$write_1__SEL_1 or
	  cache_masterPortShim_rff$D_OUT or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_2 or
	  MUX_cache_rg_lower_word64_full$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop or
	  cache_rg_lower_word64_full or
	  MUX_cache_rg_lower_word64_full$write_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_rg_lower_word64_full$write_1__SEL_1:
	  cache_rg_lower_word64_full$D_IN =
	      !cache_masterPortShim_rff$D_OUT[1];
      MUX_cache_rg_lower_word64_full$write_1__SEL_2:
	  cache_rg_lower_word64_full$D_IN =
	      MUX_cache_rg_lower_word64_full$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop:
	  cache_rg_lower_word64_full$D_IN = !cache_rg_lower_word64_full;
      MUX_cache_rg_lower_word64_full$write_1__SEL_4:
	  cache_rg_lower_word64_full$D_IN = 1'd0;
      default: cache_rg_lower_word64_full$D_IN =
		   1'bx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_lower_word64_full$EN =
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      !cache_masterPortShim_rff$D_OUT[1]) &&
	     (cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (!cache_masterPortShim_rff$D_OUT[1] ||
	      cache_rg_lower_word64_full) ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_lrsc_pa
  assign cache_rg_lrsc_pa$D_IN = cache_tlb$mv_vm_get_xlate[200:137] ;
  assign cache_rg_lrsc_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5_14_EQ_0b10_15_AND_cache_ra_ETC___d907 ;

  // register cache_rg_lrsc_valid
  assign cache_rg_lrsc_valid$D_IN =
	     MUX_cache_rg_lrsc_valid$write_1__SEL_2 &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d575 ;
  assign cache_rg_lrsc_valid$EN =
	     WILL_FIRE_RL_cache_rl_io_read_req && cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d572 ||
	     WILL_FIRE_RL_cache_rl_start_reset ;

  // register cache_rg_mem_req_sent
  assign cache_rg_mem_req_sent$D_IN = EN_req ;
  assign cache_rg_mem_req_sent$EN = 1'd1 ;

  // register cache_rg_mstatus_MXR
  assign cache_rg_mstatus_MXR$D_IN = req_mstatus_MXR ;
  assign cache_rg_mstatus_MXR$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_op
  assign cache_rg_op$D_IN = req_op ;
  assign cache_rg_op$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_pa
  assign cache_rg_pa$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_addr :
	       cache_tlb$mv_vm_get_xlate[200:137] ;
  assign cache_rg_pa$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_priv
  assign cache_rg_priv$D_IN = req_priv ;
  assign cache_rg_priv$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_pte_pa
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_rg_pte_pa$write_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_rg_pte_pa$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_rg_pte_pa$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_2;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_rg_pte_pa$D_IN = MUX_cache_rg_pte_pa$write_1__VAL_3;
      default: cache_rg_pte_pa$D_IN =
		   64'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_rg_pte_pa$EN =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ;

  // register cache_rg_satp
  assign cache_rg_satp$D_IN = req_satp ;
  assign cache_rg_satp$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_sstatus_SUM
  assign cache_rg_sstatus_SUM$D_IN = req_sstatus_SUM ;
  assign cache_rg_sstatus_SUM$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_st_amo_val
  assign cache_rg_st_amo_val$D_IN =
	     WILL_FIRE_RL_cache_do_req ?
	       req_st_value :
	       MUX_cache_rg_st_amo_val$write_1__VAL_2 ;
  assign cache_rg_st_amo_val$EN =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1288 ||
	     WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_state
  always@(EN_tlb_flush or
	  WILL_FIRE_RL_cache_do_req or
	  MUX_cache_rg_state$write_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_start_reset or
	  MUX_cache_rg_state$write_1__SEL_4 or
	  MUX_cache_rg_state$write_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_io_AMO_op_req or
	  WILL_FIRE_RL_cache_rl_io_AMO_SC_req or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_rg_state$write_1__SEL_8 or
	  MUX_cache_rg_state$write_1__VAL_8 or
	  WILL_FIRE_RL_cache_rl_io_read_req or
	  WILL_FIRE_RL_cache_rl_rereq or
	  MUX_cache_rg_state$write_1__SEL_11 or
	  MUX_cache_rg_state$write_1__VAL_11 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  WILL_FIRE_RL_cache_rl_ptw_level_0 or
	  MUX_cache_rg_state$write_1__VAL_13 or
	  WILL_FIRE_RL_cache_rl_ptw_level_1 or
	  MUX_cache_rg_state$write_1__VAL_14 or
	  WILL_FIRE_RL_cache_rl_ptw_level_2 or
	  MUX_cache_rg_state$write_1__VAL_15 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  WILL_FIRE_RL_cache_rl_probe_and_immed_rsp or
	  MUX_cache_rg_state$write_1__VAL_17 or
	  MUX_cache_rg_state$write_1__SEL_18)
  case (1'b1)
    EN_tlb_flush: cache_rg_state$D_IN = 5'd2;
    WILL_FIRE_RL_cache_do_req:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_2;
    WILL_FIRE_RL_cache_rl_start_reset: cache_rg_state$D_IN = 5'd1;
    MUX_cache_rg_state$write_1__SEL_4:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_4;
    WILL_FIRE_RL_cache_rl_io_AMO_op_req: cache_rg_state$D_IN = 5'd16;
    WILL_FIRE_RL_cache_rl_io_AMO_SC_req || WILL_FIRE_RL_cache_rl_io_write_req:
	cache_rg_state$D_IN = 5'd12;
    MUX_cache_rg_state$write_1__SEL_8:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_8;
    WILL_FIRE_RL_cache_rl_io_read_req: cache_rg_state$D_IN = 5'd14;
    WILL_FIRE_RL_cache_rl_rereq: cache_rg_state$D_IN = 5'd3;
    MUX_cache_rg_state$write_1__SEL_11:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_11;
    WILL_FIRE_RL_cache_rl_start_cache_refill: cache_rg_state$D_IN = 5'd10;
    WILL_FIRE_RL_cache_rl_ptw_level_0:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_13;
    WILL_FIRE_RL_cache_rl_ptw_level_1:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_14;
    WILL_FIRE_RL_cache_rl_ptw_level_2:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_15;
    WILL_FIRE_RL_cache_rl_start_tlb_refill: cache_rg_state$D_IN = 5'd6;
    WILL_FIRE_RL_cache_rl_probe_and_immed_rsp:
	cache_rg_state$D_IN = MUX_cache_rg_state$write_1__VAL_17;
    MUX_cache_rg_state$write_1__SEL_18: cache_rg_state$D_IN = 5'd2;
    default: cache_rg_state$D_IN = 5'bxxxxx /* unspecified value */ ;
  endcase
  assign cache_rg_state$EN =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd3 ||
	     WILL_FIRE_RL_cache_rl_io_read_rsp &&
	     (!cache_rg_lower_word64_full &&
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[1] &&
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1] ||
	      cache_masterPortShim_rff$D_OUT[3:2] != 2'd0) ||
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_do_req ||
	     WILL_FIRE_RL_cache_rl_start_reset ||
	     EN_tlb_flush ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ||
	     WILL_FIRE_RL_cache_rl_io_AMO_SC_req ||
	     WILL_FIRE_RL_cache_rl_io_write_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ;

  // register cache_rg_tlb_walk
  assign cache_rg_tlb_walk$D_IN = cache_rg_state != 5'd3 ;
  assign cache_rg_tlb_walk$EN = CAN_FIRE_RL_cache_rl_count_tlb_latency ;

  // register cache_rg_victim_way
  assign cache_rg_victim_way$D_IN = tmp__h50715[0] ;
  assign cache_rg_victim_way$EN = CAN_FIRE_RL_cache_rl_start_cache_refill ;

  // register cache_rg_width_code
  assign cache_rg_width_code$D_IN = req_width_code ;
  assign cache_rg_width_code$EN = WILL_FIRE_RL_cache_do_req ;

  // register cache_rg_wr_rsp_err
  assign cache_rg_wr_rsp_err$D_IN = 1'd1 ;
  assign cache_rg_wr_rsp_err$EN =
	     WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	     cache_masterPortShim_bff$D_OUT[1:0] != 2'd0 ;

  // submodule cache_f_fabric_second_write_reqs
  assign cache_f_fabric_second_write_reqs$D_IN =
	     { cache_f_fabric_write_reqs$D_OUT[127:64],
	       fabric_2_strb__h5331,
	       1'd1,
	       mem_req_wr_second_data_wuser__h5466 } ;
  assign cache_f_fabric_second_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 ;
  assign cache_f_fabric_second_write_reqs$DEQ =
	     cache_masterPortShim_wff$FULL_N &&
	     cache_f_fabric_second_write_reqs$EMPTY_N ;
  assign cache_f_fabric_second_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_fabric_write_reqs
  always@(MUX_cache_f_fabric_write_reqs$enq_1__SEL_1 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_1 or
	  MUX_cache_dw_output_ld_val$wset_1__SEL_3 or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_cache_rl_writeback_updated_PTE or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_io_write_req or
	  MUX_cache_f_fabric_write_reqs$enq_1__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_f_fabric_write_reqs$enq_1__SEL_1:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_1;
      MUX_cache_dw_output_ld_val$wset_1__SEL_3:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_cache_rl_writeback_updated_PTE:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_io_write_req:
	  cache_f_fabric_write_reqs$D_IN =
	      MUX_cache_f_fabric_write_reqs$enq_1__VAL_4;
      default: cache_f_fabric_write_reqs$D_IN =
		   196'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_f_fabric_write_reqs$ENQ =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1225 ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     (cache_rg_lower_word64_full ||
	      cache_masterPortShim_rff$D_OUT[1]) ||
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ||
	     WILL_FIRE_RL_cache_rl_io_write_req ;
  assign cache_f_fabric_write_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_f_fabric_write_reqs$CLR = 1'b0 ;

  // submodule cache_f_pte_writebacks
  assign cache_f_pte_writebacks$D_IN =
	     { cache_tlb$mv_vm_get_xlate[63:0],
	       cache_tlb$mv_vm_get_xlate[129:66] } ;
  assign cache_f_pte_writebacks$ENQ = MUX_cache_tlb$ma_insert_1__SEL_1 ;
  assign cache_f_pte_writebacks$DEQ =
	     WILL_FIRE_RL_cache_rl_writeback_updated_PTE ;
  assign cache_f_pte_writebacks$CLR = 1'b0 ;

  // submodule cache_f_reset_reqs
  assign cache_f_reset_reqs$D_IN = !EN_server_reset_request_put ;
  assign cache_f_reset_reqs$ENQ = CAN_FIRE_RL_cache_do_reset_req ;
  assign cache_f_reset_reqs$DEQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_reqs$CLR = 1'b0 ;

  // submodule cache_f_reset_rsps
  assign cache_f_reset_rsps$D_IN = cache_f_reset_reqs$D_OUT ;
  assign cache_f_reset_rsps$ENQ =
	     WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 ;
  assign cache_f_reset_rsps$DEQ =
	     EN_server_flush_response_get || EN_server_reset_response_get ;
  assign cache_f_reset_rsps$CLR = 1'b0 ;

  // submodule cache_masterPortShim_arff
  always@(MUX_cache_masterPortShim_arff$enq_1__SEL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_1 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_2 or
	  MUX_cache_masterPortShim_arff$enq_1__SEL_3 or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_3 or
	  WILL_FIRE_RL_cache_rl_start_tlb_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_4 or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_masterPortShim_arff$enq_1__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_masterPortShim_arff$enq_1__SEL_1:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_1;
      MUX_cache_masterPortShim_arff$enq_1__SEL_2:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_2;
      MUX_cache_masterPortShim_arff$enq_1__SEL_3:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_3;
      WILL_FIRE_RL_cache_rl_start_tlb_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_4;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_masterPortShim_arff$D_IN =
	      MUX_cache_masterPortShim_arff$enq_1__VAL_5;
      default: cache_masterPortShim_arff$D_IN =
		   97'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_masterPortShim_arff$ENQ =
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     !cache_masterPortShim_rff$D_OUT[6] &&
	     !cache_masterPortShim_rff$D_OUT[7] &&
	     !cache_masterPortShim_rff$D_OUT[5] ||
	     WILL_FIRE_RL_cache_rl_io_AMO_op_req ||
	     WILL_FIRE_RL_cache_rl_io_read_req ||
	     WILL_FIRE_RL_cache_rl_start_tlb_refill ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;
  assign cache_masterPortShim_arff$DEQ = EN_mem_master_ar_drop ;
  assign cache_masterPortShim_arff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_awff
  assign cache_masterPortShim_awff$D_IN =
	     { 4'd0,
	       cache_f_fabric_write_reqs$D_OUT[192:129],
	       mem_req_wr_addr_awlen__h5564,
	       _theResult___snd_snd_fst_val__h5602,
	       18'd65536 } ;
  assign cache_masterPortShim_awff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_awff$DEQ = EN_mem_master_aw_drop ;
  assign cache_masterPortShim_awff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_bff
  assign cache_masterPortShim_bff$D_IN = mem_master_b_put_val ;
  assign cache_masterPortShim_bff$ENQ = EN_mem_master_b_put ;
  assign cache_masterPortShim_bff$DEQ =
	     CAN_FIRE_RL_cache_rl_discard_write_rsp ;
  assign cache_masterPortShim_bff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_rff
  assign cache_masterPortShim_rff$D_IN = mem_master_r_put_val ;
  assign cache_masterPortShim_rff$ENQ = EN_mem_master_r_put ;
  assign cache_masterPortShim_rff$DEQ =
	     WILL_FIRE_RL_cache_rl_io_read_rsp ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop ||
	     WILL_FIRE_RL_cache_rl_io_AMO_read_rsp ;
  assign cache_masterPortShim_rff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_masterPortShim_wff
  assign cache_masterPortShim_wff$D_IN =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ?
	       cache_f_fabric_second_write_reqs$D_OUT :
	       MUX_cache_masterPortShim_wff$enq_1__VAL_2 ;
  assign cache_masterPortShim_wff$ENQ =
	     WILL_FIRE_RL_cache_rl_fabric_send_second_write_req ||
	     WILL_FIRE_RL_cache_rl_fabric_send_write_req ;
  assign cache_masterPortShim_wff$DEQ = EN_mem_master_w_drop ;
  assign cache_masterPortShim_wff$CLR =
	     WILL_FIRE_RL_cache_rl_start_reset && !cache_f_reset_reqs$D_OUT ;

  // submodule cache_ram_cword_set
  assign cache_ram_cword_set$ADDRA =
	     MUX_cache_ram_cword_set$a_put_1__SEL_1 ?
	       cache_rg_addr[11:4] :
	       cache_rg_cset_cword_in_cache ;
  always@(MUX_cache_ram_cword_set$b_put_1__SEL_1 or
	  req_addr or
	  MUX_cache_ram_cword_set$b_put_1__SEL_2 or
	  MUX_cache_ram_cword_set$b_put_2__VAL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  cache_rg_addr or
	  WILL_FIRE_RL_cache_rl_start_cache_refill or
	  MUX_cache_ram_cword_set$b_put_2__VAL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_cword_set$b_put_1__SEL_1:
	  cache_ram_cword_set$ADDRB = req_addr[11:4];
      MUX_cache_ram_cword_set$b_put_1__SEL_2:
	  cache_ram_cword_set$ADDRB = MUX_cache_ram_cword_set$b_put_2__VAL_2;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_cword_set$ADDRB = cache_rg_addr[11:4];
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_cword_set$ADDRB = MUX_cache_ram_cword_set$b_put_2__VAL_4;
      default: cache_ram_cword_set$ADDRB =
		   8'bxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_cword_set$DIA =
	     MUX_cache_ram_cword_set$a_put_1__SEL_1 ?
	       MUX_cache_ram_cword_set$a_put_3__VAL_1 :
	       MUX_cache_ram_cword_set$a_put_3__VAL_2 ;
  always@(MUX_cache_ram_cword_set$b_put_1__SEL_1 or
	  MUX_cache_ram_cword_set$b_put_1__SEL_2 or
	  WILL_FIRE_RL_cache_rl_rereq or
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_ram_cword_set$b_put_1__SEL_1:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      MUX_cache_ram_cword_set$b_put_1__SEL_2:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_rereq:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      WILL_FIRE_RL_cache_rl_start_cache_refill:
	  cache_ram_cword_set$DIB =
	      258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
      default: cache_ram_cword_set$DIB =
		   258'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  assign cache_ram_cword_set$WEA = 1'd1 ;
  assign cache_ram_cword_set$WEB = 1'd0 ;
  assign cache_ram_cword_set$ENA =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d974 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ;
  assign cache_ram_cword_set$ENB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] != 2'd3 ||
	     WILL_FIRE_RL_cache_rl_rereq ||
	     WILL_FIRE_RL_cache_rl_start_cache_refill ;

  // submodule cache_ram_state_and_ctag_cset
  assign cache_ram_state_and_ctag_cset$ADDRA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       cache_rg_addr[11:6] :
	       cache_rg_cset_in_cache ;
  assign cache_ram_state_and_ctag_cset$ADDRB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ?
	       req_addr[11:6] :
	       cache_rg_addr[11:6] ;
  assign cache_ram_state_and_ctag_cset$DIA =
	     MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 ?
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_1 :
	       MUX_cache_ram_state_and_ctag_cset$a_put_3__VAL_2 ;
  assign cache_ram_state_and_ctag_cset$DIB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ?
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  :
	       106'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign cache_ram_state_and_ctag_cset$WEA = 1'd1 ;
  assign cache_ram_state_and_ctag_cset$WEB = 1'd0 ;
  assign cache_ram_state_and_ctag_cset$ENA =
	     WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	     cache_rg_lower_word64_full &&
	     cache_rg_cset_cword_in_cache[1:0] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 ||
	     WILL_FIRE_RL_cache_rl_reset ;
  assign cache_ram_state_and_ctag_cset$ENB =
	     MUX_cache_ram_cword_set$b_put_1__SEL_1 ||
	     WILL_FIRE_RL_cache_rl_rereq ;

  // submodule cache_soc_map
  assign cache_soc_map$m_is_IO_addr_addr = 64'h0 ;
  assign cache_soc_map$m_is_mem_addr_addr =
	     cache_tlb$mv_vm_get_xlate[200:137] ;
  assign cache_soc_map$m_is_near_mem_IO_addr_addr = 64'h0 ;

  // submodule cache_tlb
  assign cache_tlb$ma_insert_asid = cache_rg_satp[59:44] ;
  always@(MUX_cache_tlb$ma_insert_1__SEL_1 or
	  cache_tlb$mv_vm_get_xlate or
	  MUX_cache_tlb$ma_insert_1__SEL_2 or
	  MUX_cache_tlb$ma_insert_1__SEL_3 or
	  MUX_cache_tlb$ma_insert_1__SEL_4)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_cache_tlb$ma_insert_1__SEL_1:
	  cache_tlb$ma_insert_level = cache_tlb$mv_vm_get_xlate[65:64];
      MUX_cache_tlb$ma_insert_1__SEL_2: cache_tlb$ma_insert_level = 2'd2;
      MUX_cache_tlb$ma_insert_1__SEL_3: cache_tlb$ma_insert_level = 2'd1;
      MUX_cache_tlb$ma_insert_1__SEL_4: cache_tlb$ma_insert_level = 2'd0;
      default: cache_tlb$ma_insert_level = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign cache_tlb$ma_insert_pte =
	     (MUX_cache_tlb$ma_insert_1__SEL_2 ||
	      MUX_cache_tlb$ma_insert_1__SEL_3 ||
	      MUX_cache_tlb$ma_insert_1__SEL_4) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       cache_tlb$mv_vm_get_xlate[129:66] ;
  assign cache_tlb$ma_insert_pte_pa =
	     MUX_cache_tlb$ma_insert_1__SEL_1 ?
	       cache_tlb$mv_vm_get_xlate[200:137] :
	       cache_rg_pte_pa ;
  assign cache_tlb$ma_insert_vpn = cache_rg_addr[38:12] ;
  assign cache_tlb$mv_vm_get_xlate_cap = cache_rg_st_amo_val[128] ;
  assign cache_tlb$mv_vm_get_xlate_mstatus_MXR = cache_rg_mstatus_MXR ;
  assign cache_tlb$mv_vm_get_xlate_priv = cache_rg_priv ;
  assign cache_tlb$mv_vm_get_xlate_read_not_write =
	     cache_rg_op == 2'd0 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_tlb$mv_vm_get_xlate_satp = cache_rg_satp ;
  assign cache_tlb$mv_vm_get_xlate_sstatus_SUM = cache_rg_sstatus_SUM ;
  assign cache_tlb$mv_vm_put_va_full_va = req_addr ;
  assign cache_tlb$EN_mv_vm_put_va = WILL_FIRE_RL_cache_do_req ;
  assign cache_tlb$EN_ma_insert =
	     WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_tlb$mv_vm_get_xlate[130] ||
	     WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	     cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1418 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ||
	     WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) ;
  assign cache_tlb$EN_ma_flush =
	     WILL_FIRE_RL_cache_rl_start_reset || EN_tlb_flush ;

  // remaining internal signals
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1101 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h37850 } :
	       cache_ram_cword_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1218 =
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h41854 } :
	       cache_ram_cword_set$DOB[128:0] ;
  assign IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1295 =
	     ((!cache_ram_state_and_ctag_cset$DOB[52] ||
	       !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	      (!cache_ram_state_and_ctag_cset$DOB[105] ||
	       !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464)) ?
	       5'd9 :
	       5'd12 ;
  assign IF_NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache__ETC___d1294 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) ?
	       5'd12 :
	       cache_rg_state ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1100 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h37850 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1217 =
	     (cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ?
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 b__h41854 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1293 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ?
	       cache_rg_state :
	       5'd9 ;
  assign IF_cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_ETC___d1297 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1293 :
	       IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1296 ;
  assign IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1228 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_st_amo_val :
	       { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		 IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146 } ;
  assign IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d1296 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       IF_NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache__ETC___d1294 :
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1295 ;
  assign IF_cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_ETC___d470 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) ?
	       cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d452 :
	       NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d468 ||
	       cache_f_fabric_write_reqs$FULL_N ;
  assign IF_cache_rg_victim_way_502_THEN_cache_masterPo_ETC___d1573 =
	     cache_rg_victim_way ?
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } :
	       cache_ram_cword_set$DOB[257:129] ;
  assign IF_cache_rg_victim_way_502_THEN_cache_ram_cwor_ETC___d1572 =
	     cache_rg_victim_way ?
	       cache_ram_cword_set$DOB[128:0] :
	       { cache_masterPortShim_rff$D_OUT[0],
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_lower_word64 } ;
  assign IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h42065 ;
  assign IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 =
	     (cache_rg_width_code == 3'b010) ?
	       { {32{cache_rg_st_amo_val_BITS_31_TO_0__q59[31]}},
		 cache_rg_st_amo_val_BITS_31_TO_0__q59 } :
	       cache_rg_st_amo_val[63:0] ;
  assign IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2027 =
	     req_width_code == 3'b0 ||
	     req_width_code == 3'b001 && !req_addr[0] ||
	     req_width_code == 3'b010 && req_addr[1:0] == 2'b0 ||
	     req_width_code == 3'b011 && req_addr[2:0] == 3'b0 ;
  assign IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2032 =
	     (IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2027 ||
	      req_width_code == 3'b100 && req_addr[3:0] == 4'b0) &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign NOT_IF_cache_w_req_width_code_whas__933_THEN_c_ETC___d2011 =
	     req_width_code != 3'b0 &&
	     (req_width_code != 3'b001 || req_addr[0]) &&
	     (req_width_code != 3'b010 || req_addr[1:0] != 2'b0) &&
	     (req_width_code != 3'b011 || req_addr[2:0] != 3'b0) ;
  assign NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 =
	     cache_cfg_verbosity > 4'd1 ;
  assign NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 =
	     cache_cfg_verbosity > 4'd2 ;
  assign NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533 =
	     cache_cfg_verbosity >= 4'd2 ;
  assign NOT_cache_f_reset_reqs_notEmpty__75_75_AND_cac_ETC___d1586 =
	     !cache_f_reset_reqs$EMPTY_N && cache_rg_state == 5'd13 &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ;
  assign NOT_cache_masterPortShim_rff_first__342_BIT_4__ETC___d1372 =
	     !cache_masterPortShim_rff$D_OUT[4] ||
	     !cache_masterPortShim_rff$D_OUT[5] &&
	     cache_masterPortShim_rff$D_OUT[6] ||
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) ||
	     cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d468 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ||
	     !EN_commit ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d551 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 &&
	     cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d915 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d921 =
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1249 ;
  assign NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1263 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1261 ;
  assign NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1288 =
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 ;
  assign NOT_cache_rg_op_11_EQ_1_35_62_AND_NOT_cache_rg_ETC___d1284 =
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 &&
	     cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1221 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) &&
	     EN_commit ;
  assign NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1249 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) &&
	     EN_commit &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d901 ;
  assign NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1255 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) &&
	     EN_commit &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d915 ;
  assign NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1261 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) &&
	     EN_commit &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d969 =
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011 ||
	      cache_rg_lrsc_valid &&
	      cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442) &&
	     cache_dw_commit_whas__46_AND_cache_dw_commit_w_ETC___d968 ;
  assign NOT_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_ETC___d1238 =
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	     cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	     cache_soc_map$m_is_mem_addr &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00011 &&
	     cache_rg_lrsc_valid &&
	     !cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d731 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q45[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q45 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d736 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q57[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q57 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d741 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q44[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q44 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d746 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q56[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q56 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d751 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q41[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q41 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d756 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q55[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q55 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d761 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q39[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q39 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d766 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q54[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q54 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d771 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q37[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q37 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d776 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q53[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q53 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d781 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q35[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q35 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d786 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q52[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q52 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d791 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q33[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q33 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d796 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q51[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q51 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d801 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q31[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q31 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d806 =
	     { {56{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q50[7]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q50 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d826 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q43[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q43 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d830 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q42[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q42 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d834 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q40[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q40 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d838 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q38[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q38 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d842 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q36[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q36 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d846 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q34[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q34 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d850 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q32[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q32 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d854 =
	     { {48{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q30[15]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q30 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d866 =
	     { {32{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q49[31]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q49 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d870 =
	     { {32{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q48[31]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q48 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d874 =
	     { {32{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q47[31]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q47 } ;
  assign SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d878 =
	     { {32{cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q46[31]}},
	       cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q46 } ;
  assign _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 =
	     8'd1 << size_val__h57519 <= 8'd8 ;
  assign _theResult___fst__h55591 =
	     (cache_rg_addr[2:0] == 3'd0) ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       64'd0 ;
  assign access_exc_code__h5081 = MUX_cache_rg_exc_code$write_1__VAL_4 ;
  assign b__h46947 = cache_ctr_wr_rsps_pending_crg$port1__read ;
  assign b__h51868 =
	     { cache_masterPortShim_rff$D_OUT[67:4], cache_rg_lower_word64 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_4_whas__0__ETC___d273 =
	     (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
	      cache_aw_events_wires_ifc_ifc_wires_4$wget[1]) |
	     EN_tlb_flush |
	     (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[1]) ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d245 =
	     (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	      cache_aw_events_wires_ifc_ifc_wires_1$wget[2]) |
	     CAN_FIRE_RL_cache_rl_count_tlb_latency |
	     (CAN_FIRE_RL_cache_rl_count_miss_lat &&
	      cache_aw_events_wires_ifc_ifc_wires_3$wget[2]) ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d265 =
	     CAN_FIRE_RL_cache_rl_start_reset |
	     (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	      cache_aw_events_wires_ifc_ifc_wires_1$wget[1]) |
	     (CAN_FIRE_RL_cache_rl_count_miss_lat &&
	      cache_aw_events_wires_ifc_ifc_wires_3$wget[1]) ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d295 =
	     { cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d245 |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[2]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[2]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d265 |
	       cache_aw_events_wires_ifc_ifc_wires_4_whas__0__ETC___d273,
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[0]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[0]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[0]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[0]) } ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d296 =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[4]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[4]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[4]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[4]),
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[3]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[3]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[3]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[3]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d295 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d297 =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[6]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[6]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[6]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[6]),
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[5]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[5]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[5]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[5]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d296 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d298 =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[8]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[8]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[8]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[8]),
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[7]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[7]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[7]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[7]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d297 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d299 =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[10]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[10]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[10]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[10]),
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[9]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[9]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[9]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[9]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d298 } ;
  assign cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d300 =
	     { (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[12]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[12]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[12]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[12]),
	       (CAN_FIRE_RL_cache_rl_probe_and_immed_rsp &&
		cache_aw_events_wires_ifc_ifc_wires_1$wget[11]) |
	       (CAN_FIRE_RL_cache_rl_count_miss_lat &&
		cache_aw_events_wires_ifc_ifc_wires_3$wget[11]) |
	       (MUX_cache_ram_state_and_ctag_cset$a_put_1__SEL_1 &&
		cache_aw_events_wires_ifc_ifc_wires_4$wget[11]) |
	       (EN_req && cache_aw_events_wires_ifc_ifc_wires_6$wget[11]),
	       cache_aw_events_wires_ifc_ifc_wires_whas_AND_c_ETC___d299 } ;
  assign cache_dw_commit_whas__46_AND_cache_dw_commit_w_ETC___d968 =
	     EN_commit &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ;
  assign cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q2 =
	     cache_masterPortShim_rff$D_OUT[11:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q5 =
	     cache_masterPortShim_rff$D_OUT[19:12] ;
  assign cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q3 =
	     cache_masterPortShim_rff$D_OUT[19:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q6 =
	     cache_masterPortShim_rff$D_OUT[27:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q8 =
	     cache_masterPortShim_rff$D_OUT[35:20] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 =
	     cache_masterPortShim_rff$D_OUT[35:28] ;
  assign cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q4 =
	     cache_masterPortShim_rff$D_OUT[35:4] ;
  assign cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q9 =
	     cache_masterPortShim_rff$D_OUT[43:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q10 =
	     cache_masterPortShim_rff$D_OUT[51:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q12 =
	     cache_masterPortShim_rff$D_OUT[51:44] ;
  assign cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q13 =
	     cache_masterPortShim_rff$D_OUT[59:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q11 =
	     cache_masterPortShim_rff$D_OUT[67:36] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q14 =
	     cache_masterPortShim_rff$D_OUT[67:52] ;
  assign cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q15 =
	     cache_masterPortShim_rff$D_OUT[67:60] ;
  assign cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1418 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 ;
  assign cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1453 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1459 =
	     cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	     cache_masterPortShim_rff$D_OUT[4] &&
	     (cache_masterPortShim_rff$D_OUT[5] ||
	      !cache_masterPortShim_rff$D_OUT[6]) &&
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[22:14] != 9'd0 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1408 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	      cache_masterPortShim_rff$D_OUT[22:14] != 9'd0) &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1420 =
	     (cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5]) &&
	     cache_masterPortShim_rff$D_OUT[31:23] == 9'd0 &&
	     cache_masterPortShim_rff$D_OUT[22:14] == 9'd0 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1356 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_masterPortShim_rff$D_OUT[4] ||
	      cache_masterPortShim_rff$D_OUT[6] ||
	      cache_masterPortShim_rff$D_OUT[7] ||
	      cache_masterPortShim_rff$D_OUT[5] ||
	      cache_masterPortShim_arff$FULL_N) ;
  assign cache_masterPortShim_rff_i_notEmpty__341_AND_N_ETC___d1756 =
	     cache_masterPortShim_rff$EMPTY_N &&
	     (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	      !cache_rg_lower_word64_full &&
	      !cache_masterPortShim_rff$D_OUT[1] ||
	      cache_f_fabric_write_reqs$FULL_N) ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713 =
	     x__h10011 | y__h10012 ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q30 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:112] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q31 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[119:112] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q32 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[111:96] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q33 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[103:96] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q34 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:80] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q35 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[87:80] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q36 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[79:64] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q37 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[71:64] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q38 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:48] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q39 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[55:48] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q40 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[47:32] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q41 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[39:32] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q42 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:16] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q43 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[15:0] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q44 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[23:16] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q45 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[7:0] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q46 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:96] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q47 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:64] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q48 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:32] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q49 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:0] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q50 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:120] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q51 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[111:104] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q52 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:88] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q53 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[79:72] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q54 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:56] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q55 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[47:40] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q56 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:24] ;
  assign cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC__q57 =
	     cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[15:8] ;
  assign cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 =
	     cache_ram_state_and_ctag_cset$DOB[51:0] ==
	     cache_tlb$mv_vm_get_xlate[200:149] ;
  assign cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464 =
	     cache_ram_state_and_ctag_cset$DOB[104:53] ==
	     cache_tlb$mv_vm_get_xlate[200:149] ;
  assign cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d548 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     cache_rg_op == 2'd2 &&
	     cache_rg_amo_funct5 == 5'b00010 ;
  assign cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     EN_commit ;
  assign cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d901 =
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_rg_amo_funct5_14_EQ_0b10_15_AND_cache_ra_ETC___d907 =
	     cache_rg_amo_funct5 == 5'b00010 &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ;
  assign cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442 =
	     cache_rg_lrsc_pa == cache_tlb$mv_vm_get_xlate[200:137] ;
  assign cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1308 =
	     cache_rg_mem_req_sent && cache_rg_op == 2'd0 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ;
  assign cache_rg_mem_req_sent_306_AND_cache_rg_op_11_E_ETC___d1313 =
	     cache_rg_mem_req_sent && cache_rg_op == 2'd2 &&
	     (!cache_ram_state_and_ctag_cset$DOB[52] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458) &&
	     (!cache_ram_state_and_ctag_cset$DOB[105] ||
	      !cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ;
  assign cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d553 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d548 ||
	      NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d551) ;
  assign cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d572 =
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d553 ||
	     cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d570 ;
  assign cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d575 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     (cache_ram_state_and_ctag_cset$DOB[52] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 ||
	      cache_ram_state_and_ctag_cset$DOB[105] &&
	      cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464) ;
  assign cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d578 =
	     cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_2__ETC___d575 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37449 ;
  assign cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d1223 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1221 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 ;
  assign cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d570 =
	     cache_rg_op == 2'd1 &&
	     cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 ||
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 &&
	     cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 ;
  assign cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d972 =
	     (cache_rg_op == 2'd1 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	     NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d969 ||
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 ;
  assign cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d1268 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37449 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d452 =
	     cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 &&
	     lrsc_result__h37449 ||
	     !EN_commit ||
	     cache_f_fabric_write_reqs$FULL_N ;
  assign cache_rg_st_amo_val_BITS_31_TO_0__q59 = cache_rg_st_amo_val[31:0] ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1225 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d1223 ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1276 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d468 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op != 2'd1 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00011) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567 &&
	     NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d903 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d901 ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d917 =
	     cache_soc_map$m_is_mem_addr &&
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) &&
	     NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d915 ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d929 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     (cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011 ||
	      cache_rg_op != 2'd1 &&
	      cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d567) ;
  assign cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d974 =
	     cache_soc_map$m_is_mem_addr && cache_rg_op != 2'd0 &&
	     (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	     cache_rg_op_11_EQ_1_35_OR_cache_rg_op_11_EQ_2__ETC___d972 ;
  assign cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 =
	     cache_tlb$mv_vm_get_xlate[200:137] == cache_rg_lrsc_pa ;
  assign cline_fabric_addr__h50561 = { cache_rg_pa[63:6], 6'd0 } ;
  assign lev_0_pte_pa__h49110 = MUX_cache_rg_pte_pa$write_1__VAL_2 ;
  assign lev_0_pte_pa_w64_fa__h49112 = { lev_0_pte_pa__h49110[63:3], 3'b0 } ;
  assign lev_1_PTN_pa__h47995 = { 8'd0, x__h48072 } ;
  assign lev_1_pte_pa__h47997 = MUX_cache_rg_pte_pa$write_1__VAL_1 ;
  assign lev_1_pte_pa_w64_fa__h47999 = { lev_1_pte_pa__h47997[63:3], 3'b0 } ;
  assign lev_2_pte_pa__h47042 = MUX_cache_rg_pte_pa$write_1__VAL_3 ;
  assign lev_2_pte_pa_w64_fa__h47044 = { lev_2_pte_pa__h47042[63:3], 3'b0 } ;
  assign lrsc_result__h37449 =
	     !cache_rg_lrsc_valid ||
	     !cache_rg_lrsc_pa_41_EQ_cache_tlb_mv_vm_get_xla_ETC___d442 ;
  assign mem_req_wr_addr_awlen__h5564 =
	     (cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100) ?
	       8'd1 :
	       8'd0 ;
  assign mem_req_wr_second_data_wuser__h5466 =
	     cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100 &&
	     cache_f_fabric_write_reqs$D_OUT[128] ;
  assign new_st_val_128__h42065 = { 64'd0, x__h42068 } ;
  assign new_st_val_128__h58332 = { 64'd0, x__h58335 } ;
  assign new_st_val_64__h42070 = { 32'd0, _theResult_____2__h42064[31:0] } ;
  assign new_st_val_64__h42142 =
	     IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 +
	     IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ;
  assign new_st_val_64__h43339 = w1__h41921 ^ w2__h41923 ;
  assign new_st_val_64__h43343 = w1__h41921 & w2__h41923 ;
  assign new_st_val_64__h43347 = w1__h41921 | w2__h41923 ;
  assign new_st_val_64__h43351 =
	     (w1__h41921 < w2__h41923) ? w1__h41921 : w2__h41923 ;
  assign new_st_val_64__h43356 =
	     (w1__h41921 <= w2__h41923) ? w2__h41923 : w1__h41921 ;
  assign new_st_val_64__h43362 =
	     ((IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ^
	       64'h8000000000000000)) ?
	       w1__h41921 :
	       w2__h41923 ;
  assign new_st_val_64__h43367 =
	     ((IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ^
	       64'h8000000000000000)) ?
	       w2__h41923 :
	       w1__h41921 ;
  assign new_st_val_64__h58337 = { 32'd0, _theResult_____2__h58331[31:0] } ;
  assign new_st_val_64__h58409 =
	     IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 +
	     IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ;
  assign new_st_val_64__h60320 = w1__h58298 ^ w2__h41923 ;
  assign new_st_val_64__h60324 = w1__h58298 & w2__h41923 ;
  assign new_st_val_64__h60328 = w1__h58298 | w2__h41923 ;
  assign new_st_val_64__h60332 =
	     (w1__h58298 < w2__h41923) ? w1__h58298 : w2__h41923 ;
  assign new_st_val_64__h60337 =
	     (w1__h58298 <= w2__h41923) ? w2__h41923 : w1__h58298 ;
  assign new_st_val_64__h60343 =
	     ((IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 ^
	       64'h8000000000000000) <
	      (IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ^
	       64'h8000000000000000)) ?
	       w1__h58298 :
	       w2__h41923 ;
  assign new_st_val_64__h60348 =
	     ((IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 ^
	       64'h8000000000000000) <=
	      (IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1111 ^
	       64'h8000000000000000)) ?
	       w2__h41923 :
	       w1__h58298 ;
  assign page_fault_exc_code__h5082 =
	     (cache_rg_op == 2'd0 ||
	      cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00010) ?
	       6'd13 :
	       6'd15 ;
  assign result_hi8519_BITS_15_TO_0__q17 = result_hi__h58519[15:0] ;
  assign result_hi8519_BITS_15_TO_8__q19 = result_hi__h58519[15:8] ;
  assign result_hi8519_BITS_23_TO_16__q20 = result_hi__h58519[23:16] ;
  assign result_hi8519_BITS_31_TO_0__q18 = result_hi__h58519[31:0] ;
  assign result_hi8519_BITS_31_TO_16__q21 = result_hi__h58519[31:16] ;
  assign result_hi8519_BITS_31_TO_24__q22 = result_hi__h58519[31:24] ;
  assign result_hi8519_BITS_39_TO_32__q23 = result_hi__h58519[39:32] ;
  assign result_hi8519_BITS_47_TO_32__q24 = result_hi__h58519[47:32] ;
  assign result_hi8519_BITS_47_TO_40__q26 = result_hi__h58519[47:40] ;
  assign result_hi8519_BITS_55_TO_48__q27 = result_hi__h58519[55:48] ;
  assign result_hi8519_BITS_63_TO_32__q25 = result_hi__h58519[63:32] ;
  assign result_hi8519_BITS_63_TO_48__q28 = result_hi__h58519[63:48] ;
  assign result_hi8519_BITS_63_TO_56__q29 = result_hi__h58519[63:56] ;
  assign result_hi8519_BITS_7_TO_0__q16 = result_hi__h58519[7:0] ;
  assign result_hi__h58519 =
	     cache_rg_lower_word64_full ?
	       cache_masterPortShim_rff$D_OUT[67:4] :
	       64'd0 ;
  assign result_lo8518_BITS_15_TO_0__q64 = result_lo__h58518[15:0] ;
  assign result_lo8518_BITS_15_TO_8__q67 = result_lo__h58518[15:8] ;
  assign result_lo8518_BITS_23_TO_16__q65 = result_lo__h58518[23:16] ;
  assign result_lo8518_BITS_31_TO_0__q66 = result_lo__h58518[31:0] ;
  assign result_lo8518_BITS_31_TO_16__q68 = result_lo__h58518[31:16] ;
  assign result_lo8518_BITS_31_TO_24__q69 = result_lo__h58518[31:24] ;
  assign result_lo8518_BITS_39_TO_32__q70 = result_lo__h58518[39:32] ;
  assign result_lo8518_BITS_47_TO_32__q71 = result_lo__h58518[47:32] ;
  assign result_lo8518_BITS_47_TO_40__q73 = result_lo__h58518[47:40] ;
  assign result_lo8518_BITS_55_TO_48__q74 = result_lo__h58518[55:48] ;
  assign result_lo8518_BITS_63_TO_32__q72 = result_lo__h58518[63:32] ;
  assign result_lo8518_BITS_63_TO_48__q75 = result_lo__h58518[63:48] ;
  assign result_lo8518_BITS_63_TO_56__q76 = result_lo__h58518[63:56] ;
  assign result_lo8518_BITS_7_TO_0__q63 = result_lo__h58518[7:0] ;
  assign result_lo__h35486 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[7:0] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d731 ;
  assign result_lo__h35521 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[15:8] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d736 ;
  assign result_lo__h35554 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[23:16] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d741 ;
  assign result_lo__h35587 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:24] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d746 ;
  assign result_lo__h35620 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[39:32] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d751 ;
  assign result_lo__h35653 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[47:40] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d756 ;
  assign result_lo__h35686 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[55:48] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d761 ;
  assign result_lo__h35719 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:56] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d766 ;
  assign result_lo__h35752 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[71:64] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d771 ;
  assign result_lo__h35785 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[79:72] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d776 ;
  assign result_lo__h35818 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[87:80] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d781 ;
  assign result_lo__h35851 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:88] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d786 ;
  assign result_lo__h35884 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[103:96] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d791 ;
  assign result_lo__h35917 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[111:104] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d796 ;
  assign result_lo__h35950 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[119:112] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d801 ;
  assign result_lo__h35983 =
	     cache_rg_is_unsigned ?
	       { 56'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:120] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d806 ;
  assign result_lo__h36038 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[15:0] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d826 ;
  assign result_lo__h36071 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:16] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d830 ;
  assign result_lo__h36104 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[47:32] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d834 ;
  assign result_lo__h36137 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:48] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d838 ;
  assign result_lo__h36170 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[79:64] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d842 ;
  assign result_lo__h36203 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:80] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d846 ;
  assign result_lo__h36236 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[111:96] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d850 ;
  assign result_lo__h36269 =
	     cache_rg_is_unsigned ?
	       { 48'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:112] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d854 ;
  assign result_lo__h36316 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[31:0] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d866 ;
  assign result_lo__h36349 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:32] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d870 ;
  assign result_lo__h36382 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[95:64] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d874 ;
  assign result_lo__h36415 =
	     cache_rg_is_unsigned ?
	       { 32'd0,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:96] } :
	       SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d878 ;
  assign result_lo__h55659 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[11:4] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q2[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_11_TO_4__q2 } ;
  assign result_lo__h55692 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[19:12] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q5[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_12__q5 } ;
  assign result_lo__h55725 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[27:20] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q6[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_27_TO_20__q6 } ;
  assign result_lo__h55758 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[35:28] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_28__q7 } ;
  assign result_lo__h55791 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[43:36] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q9[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_43_TO_36__q9 } ;
  assign result_lo__h55824 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[51:44] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q12[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_44__q12 } ;
  assign result_lo__h55857 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[59:52] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q13[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_59_TO_52__q13 } ;
  assign result_lo__h55890 =
	     cache_rg_is_unsigned ?
	       { 56'd0, cache_masterPortShim_rff$D_OUT[67:60] } :
	       { {56{cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q15[7]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_60__q15 } ;
  assign result_lo__h55953 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[19:4] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q3[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_19_TO_4__q3 } ;
  assign result_lo__h55986 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[35:20] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q8[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_20__q8 } ;
  assign result_lo__h56019 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[51:36] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q10[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_51_TO_36__q10 } ;
  assign result_lo__h56052 =
	     cache_rg_is_unsigned ?
	       { 48'd0, cache_masterPortShim_rff$D_OUT[67:52] } :
	       { {48{cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q14[15]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_52__q14 } ;
  assign result_lo__h56103 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[35:4] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q4[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_35_TO_4__q4 } ;
  assign result_lo__h56136 =
	     cache_rg_is_unsigned ?
	       { 32'd0, cache_masterPortShim_rff$D_OUT[67:36] } :
	       { {32{cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q11[31]}},
		 cache_masterPortShim_rffD_OUT_BITS_67_TO_36__q11 } ;
  assign result_lo__h58518 =
	     cache_rg_lower_word64_full ?
	       cache_rg_lower_word64 :
	       _theResult___fst__h55527 ;
  assign result_lo__h59286 =
	     { {56{result_lo8518_BITS_7_TO_0__q63[7]}},
	       result_lo8518_BITS_7_TO_0__q63 } ;
  assign result_lo__h59317 =
	     { {56{result_lo8518_BITS_15_TO_8__q67[7]}},
	       result_lo8518_BITS_15_TO_8__q67 } ;
  assign result_lo__h59348 =
	     { {56{result_lo8518_BITS_23_TO_16__q65[7]}},
	       result_lo8518_BITS_23_TO_16__q65 } ;
  assign result_lo__h59379 =
	     { {56{result_lo8518_BITS_31_TO_24__q69[7]}},
	       result_lo8518_BITS_31_TO_24__q69 } ;
  assign result_lo__h59410 =
	     { {56{result_lo8518_BITS_39_TO_32__q70[7]}},
	       result_lo8518_BITS_39_TO_32__q70 } ;
  assign result_lo__h59441 =
	     { {56{result_lo8518_BITS_47_TO_40__q73[7]}},
	       result_lo8518_BITS_47_TO_40__q73 } ;
  assign result_lo__h59472 =
	     { {56{result_lo8518_BITS_55_TO_48__q74[7]}},
	       result_lo8518_BITS_55_TO_48__q74 } ;
  assign result_lo__h59503 =
	     { {56{result_lo8518_BITS_63_TO_56__q76[7]}},
	       result_lo8518_BITS_63_TO_56__q76 } ;
  assign result_lo__h59534 =
	     { {56{result_hi8519_BITS_7_TO_0__q16[7]}},
	       result_hi8519_BITS_7_TO_0__q16 } ;
  assign result_lo__h59565 =
	     { {56{result_hi8519_BITS_15_TO_8__q19[7]}},
	       result_hi8519_BITS_15_TO_8__q19 } ;
  assign result_lo__h59596 =
	     { {56{result_hi8519_BITS_23_TO_16__q20[7]}},
	       result_hi8519_BITS_23_TO_16__q20 } ;
  assign result_lo__h59627 =
	     { {56{result_hi8519_BITS_31_TO_24__q22[7]}},
	       result_hi8519_BITS_31_TO_24__q22 } ;
  assign result_lo__h59658 =
	     { {56{result_hi8519_BITS_39_TO_32__q23[7]}},
	       result_hi8519_BITS_39_TO_32__q23 } ;
  assign result_lo__h59689 =
	     { {56{result_hi8519_BITS_47_TO_40__q26[7]}},
	       result_hi8519_BITS_47_TO_40__q26 } ;
  assign result_lo__h59720 =
	     { {56{result_hi8519_BITS_55_TO_48__q27[7]}},
	       result_hi8519_BITS_55_TO_48__q27 } ;
  assign result_lo__h59751 =
	     { {56{result_hi8519_BITS_63_TO_56__q29[7]}},
	       result_hi8519_BITS_63_TO_56__q29 } ;
  assign result_lo__h59804 =
	     { {48{result_lo8518_BITS_15_TO_0__q64[15]}},
	       result_lo8518_BITS_15_TO_0__q64 } ;
  assign result_lo__h59835 =
	     { {48{result_lo8518_BITS_31_TO_16__q68[15]}},
	       result_lo8518_BITS_31_TO_16__q68 } ;
  assign result_lo__h59866 =
	     { {48{result_lo8518_BITS_47_TO_32__q71[15]}},
	       result_lo8518_BITS_47_TO_32__q71 } ;
  assign result_lo__h59897 =
	     { {48{result_lo8518_BITS_63_TO_48__q75[15]}},
	       result_lo8518_BITS_63_TO_48__q75 } ;
  assign result_lo__h59928 =
	     { {48{result_hi8519_BITS_15_TO_0__q17[15]}},
	       result_hi8519_BITS_15_TO_0__q17 } ;
  assign result_lo__h59959 =
	     { {48{result_hi8519_BITS_31_TO_16__q21[15]}},
	       result_hi8519_BITS_31_TO_16__q21 } ;
  assign result_lo__h59990 =
	     { {48{result_hi8519_BITS_47_TO_32__q24[15]}},
	       result_hi8519_BITS_47_TO_32__q24 } ;
  assign result_lo__h60021 =
	     { {48{result_hi8519_BITS_63_TO_48__q28[15]}},
	       result_hi8519_BITS_63_TO_48__q28 } ;
  assign result_lo__h60066 =
	     { {32{result_lo8518_BITS_31_TO_0__q66[31]}},
	       result_lo8518_BITS_31_TO_0__q66 } ;
  assign result_lo__h60097 =
	     { {32{result_lo8518_BITS_63_TO_32__q72[31]}},
	       result_lo8518_BITS_63_TO_32__q72 } ;
  assign result_lo__h60128 =
	     { {32{result_hi8519_BITS_31_TO_0__q18[31]}},
	       result_hi8519_BITS_31_TO_0__q18 } ;
  assign result_lo__h60159 =
	     { {32{result_hi8519_BITS_63_TO_32__q25[31]}},
	       result_hi8519_BITS_63_TO_32__q25 } ;
  assign satp_pa__h2304 = { 8'd0, x__h7669 } ;
  assign shift_bits__h5354 =
	     { cache_f_fabric_write_reqs$D_OUT[131:129], 3'b0 } ;
  assign strobe64__h5583 =
	     8'b00000001 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5587 =
	     8'b00000011 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5591 =
	     8'b00001111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign strobe64__h5595 =
	     8'b11111111 << cache_f_fabric_write_reqs$D_OUT[131:129] ;
  assign tmp__h50714 = { 1'd0, cache_rg_victim_way } ;
  assign tmp__h50715 = tmp__h50714 + 2'd1 ;
  assign vpn_0_pa__h49109 = { 52'd0, cache_rg_addr[20:12], 3'd0 } ;
  assign vpn_1_pa__h47996 = { 52'd0, cache_rg_addr[29:21], 3'd0 } ;
  assign vpn_2_pa__h47041 = { 52'd0, cache_rg_addr[38:30], 3'd0 } ;
  assign w11916_BITS_31_TO_0__q58 = w1__h41916[31:0] ;
  assign w18293_BITS_31_TO_0__q77 = w1__h58293[31:0] ;
  assign w1___1__h42109 = { 32'd0, w1__h41916[31:0] } ;
  assign w1___1__h58376 = { 32'd0, w1__h58293[31:0] } ;
  assign w2__h41923 =
	     (cache_rg_width_code == 3'b010) ?
	       { 32'd0, cache_rg_st_amo_val[31:0] } :
	       cache_rg_st_amo_val[63:0] ;
  assign word64__h5582 =
	     cache_f_fabric_write_reqs$D_OUT[63:0] << shift_bits__h5354 ;
  assign x__h10011 = cache_ram_cword_set$DOB[128:0] & y__h10065 ;
  assign x__h35451 =
	     { _theResult___snd_fst__h9903, _theResult___fst__h9901 } ;
  assign x__h42068 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h42070 :
	       _theResult_____2__h42064 ;
  assign x__h46309 = { _theResult___snd_fst__h9903, w1__h41916 } ;
  assign x__h48072 = { cache_masterPortShim_rff$D_OUT[57:14], 12'b0 } ;
  assign x__h58326 =
	     (cache_rg_width_code == 3'b100) ?
	       cache_rg_st_amo_val[127:0] :
	       new_st_val_128__h58332 ;
  assign x__h58335 =
	     (cache_rg_width_code == 3'b010) ?
	       new_st_val_64__h58337 :
	       _theResult_____2__h58331 ;
  assign x__h60453 = { _theResult___snd_fst__h58513, w1__h58293 } ;
  assign x__h7669 = { cache_rg_satp[43:0], 12'b0 } ;
  assign y__h10012 = cache_ram_cword_set$DOB[257:129] & y__h22757 ;
  assign y__h10065 =
	     {129{cache_ram_state_and_ctag_cset$DOB[52] &&
		  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458}} ;
  assign y__h22757 =
	     {129{cache_ram_state_and_ctag_cset$DOB[105] &&
		  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464}} ;
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011: fabric_2_strb__h5331 = 8'd0;
      3'b100: fabric_2_strb__h5331 = 8'b11111111;
      default: fabric_2_strb__h5331 = 8'd0;
    endcase
  end
  always@(cache_rg_victim_way or cache_ram_state_and_ctag_cset$DOB)
  begin
    case (cache_rg_victim_way)
      1'd0:
	  CASE_cache_rg_victim_way_0_cache_ram_state_and_ETC__q1 =
	      cache_ram_state_and_ctag_cset$DOB[52];
      1'd1:
	  CASE_cache_rg_victim_way_0_cache_ram_state_and_ETC__q1 =
	      cache_ram_state_and_ctag_cset$DOB[105];
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3, 3'b100: _theResult___fst__h41041 = 64'd1;
      default: _theResult___fst__h41041 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010:
	  _theResult___snd_snd_fst_val__h5602 =
	      cache_f_fabric_write_reqs$D_OUT[195:193];
      3'b011, 3'b100: _theResult___snd_snd_fst_val__h5602 = 3'b011;
      default: _theResult___snd_snd_fst_val__h5602 = 3'b110;
    endcase
  end
  always@(cache_rg_width_code)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: size_val__h57519 = cache_rg_width_code;
      default: size_val__h57519 = 3'b100;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or cache_rg_exc_code)
  begin
    case (cache_tlb$mv_vm_get_xlate[203:202])
      2'd1: x1_avValue_snd_snd__h46483 = cache_rg_exc_code;
      2'd2: x1_avValue_snd_snd__h46483 = cache_tlb$mv_vm_get_xlate[136:131];
      default: x1_avValue_snd_snd__h46483 = cache_rg_exc_code;
    endcase
  end
  always@(cache_rg_width_code or result_hi__h58519)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_fst__h58513 = 64'd0;
      3'b100: _theResult___snd_fst__h58513 = result_hi__h58519;
      default: _theResult___snd_fst__h58513 = 64'd0;
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or word64__h5582)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0, 3'b001, 3'b010, 3'b011:
	  mem_req_wr_data_wdata__h5638 = word64__h5582;
      default: mem_req_wr_data_wdata__h5638 =
		   cache_f_fabric_write_reqs$D_OUT[63:0];
    endcase
  end
  always@(cache_f_fabric_write_reqs$D_OUT or
	  strobe64__h5583 or
	  strobe64__h5587 or strobe64__h5591 or strobe64__h5595)
  begin
    case (cache_f_fabric_write_reqs$D_OUT[195:193])
      3'b0: mem_req_wr_data_wstrb__h5639 = strobe64__h5583;
      3'b001: mem_req_wr_data_wstrb__h5639 = strobe64__h5587;
      3'b010: mem_req_wr_data_wstrb__h5639 = strobe64__h5591;
      3'b011: mem_req_wr_data_wstrb__h5639 = strobe64__h5595;
      3'b100: mem_req_wr_data_wstrb__h5639 = 8'b11111111;
      default: mem_req_wr_data_wstrb__h5639 = 8'd0;
    endcase
  end
  always@(cache_ram_state_and_ctag_cset$DOB or
	  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464 or
	  cache_ram_cword_set$DOB)
  begin
    case (cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464)
      1'd0: new_cword__h37832 = cache_ram_cword_set$DOB[127:0];
      1'd1: new_cword__h37832 = cache_ram_cword_set$DOB[256:129];
    endcase
  end
  always@(cache_rg_width_code or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_width_code)
      3'd0, 3'd1, 3'b010, 3'd3: _theResult___snd_fst__h9903 = 64'd0;
      3'b100:
	  _theResult___snd_fst__h9903 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:64];
      default: _theResult___snd_fst__h9903 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  _theResult___fst__h9947 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:0];
      4'h8:
	  _theResult___fst__h9947 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[127:64];
      default: _theResult___fst__h9947 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d866 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d870 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d874 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d878)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d866;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d870;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d874;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d878;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36316 or
	  result_lo__h36349 or result_lo__h36382 or result_lo__h36415)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 =
	      result_lo__h36316;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 =
	      result_lo__h36349;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 =
	      result_lo__h36382;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 =
	      result_lo__h36415;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d826 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d830 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d834 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d838 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d842 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d846 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d850 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d854)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d826;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d830;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d834;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d838;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d842;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d846;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d850;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d854;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h36038 or
	  result_lo__h36071 or
	  result_lo__h36104 or
	  result_lo__h36137 or
	  result_lo__h36170 or
	  result_lo__h36203 or result_lo__h36236 or result_lo__h36269)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36038;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36071;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36104;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36137;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36170;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36203;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36236;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
	      result_lo__h36269;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d731 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d736 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d741 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d746 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d751 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d756 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d761 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d766 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d771 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d776 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d781 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d786 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d791 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d796 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d801 or
	  SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d806)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d731;
      4'h1:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d736;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d741;
      4'h3:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d746;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d751;
      4'h5:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d756;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d761;
      4'h7:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d766;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d771;
      4'h9:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d776;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d781;
      4'hB:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d786;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d791;
      4'hD:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d796;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d801;
      4'hF:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 =
	      SEXT_cache_ram_cword_set_b_read__03_BITS_128_T_ETC___d806;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959 or
	  _theResult___fst__h9947 or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h41916 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947;
      3'd1:
	  w1__h41916 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955;
      3'b010:
	  w1__h41916 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d959;
      3'd3: w1__h41916 = _theResult___fst__h9947;
      3'b100:
	  w1__h41916 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:0];
      default: w1__h41916 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 or
	  w1___1__h42109 or
	  _theResult___fst__h9947 or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h41921 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947;
      3'd1:
	  w1__h41921 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955;
      3'b010: w1__h41921 = w1___1__h42109;
      3'd3: w1__h41921 = _theResult___fst__h9947;
      3'b100:
	  w1__h41921 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:0];
      default: w1__h41921 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h35486 or
	  result_lo__h35521 or
	  result_lo__h35554 or
	  result_lo__h35587 or
	  result_lo__h35620 or
	  result_lo__h35653 or
	  result_lo__h35686 or
	  result_lo__h35719 or
	  result_lo__h35752 or
	  result_lo__h35785 or
	  result_lo__h35818 or
	  result_lo__h35851 or
	  result_lo__h35884 or
	  result_lo__h35917 or result_lo__h35950 or result_lo__h35983)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35486;
      4'h1:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35521;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35554;
      4'h3:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35587;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35620;
      4'h5:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35653;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35686;
      4'h7:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35719;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35752;
      4'h9:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35785;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35818;
      4'hB:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35851;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35884;
      4'hD:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35917;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35950;
      4'hF:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 =
	      result_lo__h35983;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883 or
	  _theResult___fst__h9947 or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___fst__h9901 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d823;
      3'd1:
	  _theResult___fst__h9901 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d863;
      3'b010:
	  _theResult___fst__h9901 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d883;
      3'd3: _theResult___fst__h9901 = _theResult___fst__h9947;
      3'b100:
	  _theResult___fst__h9901 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:0];
      default: _theResult___fst__h9901 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955 or
	  w11916_BITS_31_TO_0__q58 or
	  _theResult___fst__h9947 or
	  cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d947;
      3'd1:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d955;
      3'b010:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
	      { {32{w11916_BITS_31_TO_0__q58[31]}},
		w11916_BITS_31_TO_0__q58 };
      3'd3:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
	      _theResult___fst__h9947;
      3'b100:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
	      cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713[63:0];
      default: IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1109 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h43367 or
	  new_st_val_64__h42142 or
	  w2__h41923 or
	  new_st_val_64__h43339 or
	  new_st_val_64__h43347 or
	  new_st_val_64__h43343 or
	  new_st_val_64__h43362 or
	  new_st_val_64__h43351 or new_st_val_64__h43356)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h42064 = new_st_val_64__h42142;
      5'b00001: _theResult_____2__h42064 = w2__h41923;
      5'b00100: _theResult_____2__h42064 = new_st_val_64__h43339;
      5'b01000: _theResult_____2__h42064 = new_st_val_64__h43347;
      5'b01100: _theResult_____2__h42064 = new_st_val_64__h43343;
      5'b10000: _theResult_____2__h42064 = new_st_val_64__h43362;
      5'b11000: _theResult_____2__h42064 = new_st_val_64__h43351;
      5'b11100: _theResult_____2__h42064 = new_st_val_64__h43356;
      default: _theResult_____2__h42064 = new_st_val_64__h43367;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or
	  IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 =
	      { new_cword__h37832[127:32],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[31:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 =
	      { new_cword__h37832[127:64],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[31:0],
		new_cword__h37832[31:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 =
	      { new_cword__h37832[127:96],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[31:0],
		new_cword__h37832[63:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 =
	      { IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[31:0],
		new_cword__h37832[95:0] };
      default: IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or cache_rg_st_amo_val)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 =
	      { new_cword__h37832[127:32], cache_rg_st_amo_val[31:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 =
	      { new_cword__h37832[127:64],
		cache_rg_st_amo_val[31:0],
		new_cword__h37832[31:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 =
	      { new_cword__h37832[127:96],
		cache_rg_st_amo_val[31:0],
		new_cword__h37832[63:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 =
	      { cache_rg_st_amo_val[31:0], new_cword__h37832[95:0] };
      default: IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or
	  IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:16],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0] };
      4'h2:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:32],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[15:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:48],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[31:0] };
      4'h6:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:64],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[47:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:80],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[63:0] };
      4'hA:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:96],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[79:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { new_cword__h37832[127:112],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[95:0] };
      4'hE:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
	      { IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[15:0],
		new_cword__h37832[111:0] };
      default: IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or cache_rg_st_amo_val)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:16], cache_rg_st_amo_val[15:0] };
      4'h2:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:32],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[15:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:48],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[31:0] };
      4'h6:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:64],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[47:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:80],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[63:0] };
      4'hA:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:96],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[79:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { new_cword__h37832[127:112],
		cache_rg_st_amo_val[15:0],
		new_cword__h37832[95:0] };
      4'hE:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
	      { cache_rg_st_amo_val[15:0], new_cword__h37832[111:0] };
      default: IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or
	  IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:8],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0] };
      4'h1:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:16],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[7:0] };
      4'h2:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:24],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[15:0] };
      4'h3:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:32],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[23:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:40],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[31:0] };
      4'h5:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:48],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[39:0] };
      4'h6:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:56],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[47:0] };
      4'h7:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:64],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[55:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:72],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[63:0] };
      4'h9:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:80],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[71:0] };
      4'hA:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:88],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[79:0] };
      4'hB:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:96],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[87:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:104],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[95:0] };
      4'hD:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:112],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[103:0] };
      4'hE:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { new_cword__h37832[127:120],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[111:0] };
      4'hF:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 =
	      { IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[7:0],
		new_cword__h37832[119:0] };
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or
	  IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60 =
	      { new_cword__h37832[127:64],
		IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[63:0] };
      4'h8:
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60 =
	      { IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146[63:0],
		new_cword__h37832[63:0] };
      default: CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_rg_width_code or
	  new_cword__h37832 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205 or
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60 or
	  IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h41854 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1179;
      3'd1:
	  b__h41854 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1196;
      3'b010:
	  b__h41854 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1205;
      3'd3:
	  b__h41854 = CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q60;
      3'b100:
	  b__h41854 =
	      IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146;
      default: b__h41854 = new_cword__h37832;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or cache_rg_st_amo_val)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:8], cache_rg_st_amo_val[7:0] };
      4'h1:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:16],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[7:0] };
      4'h2:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:24],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[15:0] };
      4'h3:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:32],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[23:0] };
      4'h4:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:40],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[31:0] };
      4'h5:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:48],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[39:0] };
      4'h6:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:56],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[47:0] };
      4'h7:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:64],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[55:0] };
      4'h8:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:72],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[63:0] };
      4'h9:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:80],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[71:0] };
      4'hA:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:88],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[79:0] };
      4'hB:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:96],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[87:0] };
      4'hC:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:104],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[95:0] };
      4'hD:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:112],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[103:0] };
      4'hE:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { new_cword__h37832[127:120],
		cache_rg_st_amo_val[7:0],
		new_cword__h37832[111:0] };
      4'hF:
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 =
	      { cache_rg_st_amo_val[7:0], new_cword__h37832[119:0] };
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  new_cword__h37832 or cache_rg_st_amo_val)
  begin
    case (cache_tlb$mv_vm_get_xlate[140:137])
      4'h0:
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61 =
	      { new_cword__h37832[127:64], cache_rg_st_amo_val[63:0] };
      4'h8:
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61 =
	      { cache_rg_st_amo_val[63:0], new_cword__h37832[63:0] };
      default: CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61 =
		   new_cword__h37832;
    endcase
  end
  always@(cache_rg_width_code or
	  new_cword__h37832 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078 or
	  IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087 or
	  CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61 or
	  cache_rg_st_amo_val)
  begin
    case (cache_rg_width_code)
      3'd0:
	  b__h37850 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1061;
      3'd1:
	  b__h37850 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1078;
      3'b010:
	  b__h37850 =
	      IF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10__ETC___d1087;
      3'd3:
	  b__h37850 = CASE_cache_tlbmv_vm_get_xlate_BITS_140_TO_137_ETC__q61;
      3'b100: b__h37850 = cache_rg_st_amo_val[127:0];
      default: b__h37850 = new_cword__h37832;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h55953 or
	  result_lo__h55986 or result_lo__h56019 or result_lo__h56052)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 =
	      result_lo__h55953;
      3'd2:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 =
	      result_lo__h55986;
      3'd4:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 =
	      result_lo__h56019;
      3'd6:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 =
	      result_lo__h56052;
      default: IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h55659 or
	  result_lo__h55692 or
	  result_lo__h55725 or
	  result_lo__h55758 or
	  result_lo__h55791 or
	  result_lo__h55824 or result_lo__h55857 or result_lo__h55890)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55659;
      3'd1:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55692;
      3'd2:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55725;
      3'd3:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55758;
      3'd4:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55791;
      3'd5:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55824;
      3'd6:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55857;
      3'd7:
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 =
	      result_lo__h55890;
    endcase
  end
  always@(cache_rg_addr or result_lo__h56103 or result_lo__h56136)
  begin
    case (cache_rg_addr[2:0])
      3'd0:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62 =
	      result_lo__h56103;
      3'd4:
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62 =
	      result_lo__h56136;
      default: CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62 =
		   64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664 or
	  IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684 or
	  CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62 or
	  _theResult___fst__h55591 or cache_masterPortShim_rff$D_OUT)
  begin
    case (cache_rg_width_code)
      3'd0:
	  _theResult___fst__h55527 =
	      IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1664;
      3'd1:
	  _theResult___fst__h55527 =
	      IF_cache_rg_addr_83_BITS_2_TO_0_616_EQ_0_617_T_ETC___d1684;
      3'b010:
	  _theResult___fst__h55527 =
	      CASE_cache_rg_addr_BITS_2_TO_0_0_result_lo6103_ETC__q62;
      3'd3: _theResult___fst__h55527 = _theResult___fst__h55591;
      3'b100: _theResult___fst__h55527 = cache_masterPortShim_rff$D_OUT[67:4];
      default: _theResult___fst__h55527 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or result_lo__h58518 or result_hi__h58519)
  begin
    case (cache_rg_addr[3:0])
      4'h0: _theResult___fst__h60210 = result_lo__h58518;
      4'h8: _theResult___fst__h60210 = result_hi__h58519;
      default: _theResult___fst__h60210 = 64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h60066 or
	  result_lo__h60097 or result_lo__h60128 or result_lo__h60159)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 =
	      result_lo__h60066;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 =
	      result_lo__h60097;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 =
	      result_lo__h60128;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 =
	      result_lo__h60159;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59804 or
	  result_lo__h59835 or
	  result_lo__h59866 or
	  result_lo__h59897 or
	  result_lo__h59928 or
	  result_lo__h59959 or result_lo__h59990 or result_lo__h60021)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59804;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59835;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59866;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59897;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59928;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59959;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h59990;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
	      result_lo__h60021;
      default: IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 =
		   64'd0;
    endcase
  end
  always@(cache_rg_addr or
	  result_lo__h59286 or
	  result_lo__h59317 or
	  result_lo__h59348 or
	  result_lo__h59379 or
	  result_lo__h59410 or
	  result_lo__h59441 or
	  result_lo__h59472 or
	  result_lo__h59503 or
	  result_lo__h59534 or
	  result_lo__h59565 or
	  result_lo__h59596 or
	  result_lo__h59627 or
	  result_lo__h59658 or
	  result_lo__h59689 or result_lo__h59720 or result_lo__h59751)
  begin
    case (cache_rg_addr[3:0])
      4'h0:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59286;
      4'h1:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59317;
      4'h2:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59348;
      4'h3:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59379;
      4'h4:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59410;
      4'h5:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59441;
      4'h6:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59472;
      4'h7:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59503;
      4'h8:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59534;
      4'h9:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59565;
      4'hA:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59596;
      4'hB:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59627;
      4'hC:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59658;
      4'hD:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59689;
      4'hE:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59720;
      4'hF:
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 =
	      result_lo__h59751;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858 or
	  _theResult___fst__h60210 or result_lo__h58518)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58293 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822;
      3'd1:
	  w1__h58293 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846;
      3'b010:
	  w1__h58293 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1858;
      3'd3: w1__h58293 = _theResult___fst__h60210;
      3'b100: w1__h58293 = result_lo__h58518;
      default: w1__h58293 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 or
	  w1___1__h58376 or _theResult___fst__h60210 or result_lo__h58518)
  begin
    case (cache_rg_width_code)
      3'd0:
	  w1__h58298 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822;
      3'd1:
	  w1__h58298 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846;
      3'b010: w1__h58298 = w1___1__h58376;
      3'd3: w1__h58298 = _theResult___fst__h60210;
      3'b100: w1__h58298 = result_lo__h58518;
      default: w1__h58298 = 64'd0;
    endcase
  end
  always@(cache_rg_width_code or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822 or
	  IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846 or
	  w18293_BITS_31_TO_0__q77 or
	  _theResult___fst__h60210 or result_lo__h58518)
  begin
    case (cache_rg_width_code)
      3'd0:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1822;
      3'd1:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
	      IF_cache_rg_addr_83_BITS_3_TO_0_98_EQ_0x0_27_T_ETC___d1846;
      3'b010:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
	      { {32{w18293_BITS_31_TO_0__q77[31]}},
		w18293_BITS_31_TO_0__q77 };
      3'd3:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
	      _theResult___fst__h60210;
      3'b100:
	  IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
	      result_lo__h58518;
      default: IF_cache_rg_width_code_81_EQ_0b10_19_THEN_SEXT_ETC___d1868 =
		   64'd0;
    endcase
  end
  always@(cache_rg_amo_funct5 or
	  new_st_val_64__h60348 or
	  new_st_val_64__h58409 or
	  w2__h41923 or
	  new_st_val_64__h60320 or
	  new_st_val_64__h60328 or
	  new_st_val_64__h60324 or
	  new_st_val_64__h60343 or
	  new_st_val_64__h60332 or new_st_val_64__h60337)
  begin
    case (cache_rg_amo_funct5)
      5'b0: _theResult_____2__h58331 = new_st_val_64__h58409;
      5'b00001: _theResult_____2__h58331 = w2__h41923;
      5'b00100: _theResult_____2__h58331 = new_st_val_64__h60320;
      5'b01000: _theResult_____2__h58331 = new_st_val_64__h60328;
      5'b01100: _theResult_____2__h58331 = new_st_val_64__h60324;
      5'b10000: _theResult_____2__h58331 = new_st_val_64__h60343;
      5'b11000: _theResult_____2__h58331 = new_st_val_64__h60332;
      5'b11100: _theResult_____2__h58331 = new_st_val_64__h60337;
      default: _theResult_____2__h58331 = new_st_val_64__h60348;
    endcase
  end
  always@(cache_tlb$mv_vm_get_xlate or
	  cache_soc_map$m_is_mem_addr or
	  IF_cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_ETC___d1297)
  begin
    case (cache_tlb$mv_vm_get_xlate[203:202])
      2'd1: CASE_cache_tlbmv_vm_get_xlate_BITS_203_TO_202_ETC__q78 = 5'd5;
      2'd2: CASE_cache_tlbmv_vm_get_xlate_BITS_203_TO_202_ETC__q78 = 5'd4;
      default: CASE_cache_tlbmv_vm_get_xlate_BITS_203_TO_202_ETC__q78 =
		   cache_soc_map$m_is_mem_addr ?
		     IF_cache_rg_op_11_EQ_0_12_OR_cache_rg_op_11_EQ_ETC___d1297 :
		     5'd13;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cache_aw_events_register <= `BSV_ASSIGNMENT_DELAY 14'd0;
	cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd2;
	cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY 4'd0;
	cache_rg_cache_rereq_data <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	cache_rg_ddr4_ready <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      128'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_mem_req_sent <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_state <= `BSV_ASSIGNMENT_DELAY 5'd0;
	cache_rg_tlb_walk <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cache_rg_wr_rsp_err <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (cache_aw_events_register$EN)
	  cache_aw_events_register <= `BSV_ASSIGNMENT_DELAY
	      cache_aw_events_register$D_IN;
	if (cache_cfg_verbosity$EN)
	  cache_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      cache_cfg_verbosity$D_IN;
	if (cache_ctr_wr_rsps_pending_crg$EN)
	  cache_ctr_wr_rsps_pending_crg <= `BSV_ASSIGNMENT_DELAY
	      cache_ctr_wr_rsps_pending_crg$D_IN;
	if (cache_rg_cache_rereq_data$EN)
	  cache_rg_cache_rereq_data <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cache_rereq_data$D_IN;
	if (cache_rg_cset_in_cache$EN)
	  cache_rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_cset_in_cache$D_IN;
	if (cache_rg_ddr4_ready$EN)
	  cache_rg_ddr4_ready <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_ddr4_ready$D_IN;
	if (cache_rg_ld_val$EN)
	  cache_rg_ld_val <= `BSV_ASSIGNMENT_DELAY cache_rg_ld_val$D_IN;
	if (cache_rg_lower_word64_full$EN)
	  cache_rg_lower_word64_full <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lower_word64_full$D_IN;
	if (cache_rg_lrsc_valid$EN)
	  cache_rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_lrsc_valid$D_IN;
	if (cache_rg_mem_req_sent$EN)
	  cache_rg_mem_req_sent <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_mem_req_sent$D_IN;
	if (cache_rg_state$EN)
	  cache_rg_state <= `BSV_ASSIGNMENT_DELAY cache_rg_state$D_IN;
	if (cache_rg_tlb_walk$EN)
	  cache_rg_tlb_walk <= `BSV_ASSIGNMENT_DELAY cache_rg_tlb_walk$D_IN;
	if (cache_rg_wr_rsp_err$EN)
	  cache_rg_wr_rsp_err <= `BSV_ASSIGNMENT_DELAY
	      cache_rg_wr_rsp_err$D_IN;
      end
    if (cache_rg_addr$EN)
      cache_rg_addr <= `BSV_ASSIGNMENT_DELAY cache_rg_addr$D_IN;
    if (cache_rg_allow_cap$EN)
      cache_rg_allow_cap <= `BSV_ASSIGNMENT_DELAY cache_rg_allow_cap$D_IN;
    if (cache_rg_amo_funct5$EN)
      cache_rg_amo_funct5 <= `BSV_ASSIGNMENT_DELAY cache_rg_amo_funct5$D_IN;
    if (cache_rg_cset_cword_in_cache$EN)
      cache_rg_cset_cword_in_cache <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_cset_cword_in_cache$D_IN;
    if (cache_rg_error_during_refill$EN)
      cache_rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_error_during_refill$D_IN;
    if (cache_rg_exc_code$EN)
      cache_rg_exc_code <= `BSV_ASSIGNMENT_DELAY cache_rg_exc_code$D_IN;
    if (cache_rg_is_unsigned$EN)
      cache_rg_is_unsigned <= `BSV_ASSIGNMENT_DELAY cache_rg_is_unsigned$D_IN;
    if (cache_rg_lower_word64$EN)
      cache_rg_lower_word64 <= `BSV_ASSIGNMENT_DELAY
	  cache_rg_lower_word64$D_IN;
    if (cache_rg_lrsc_pa$EN)
      cache_rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_lrsc_pa$D_IN;
    if (cache_rg_mstatus_MXR$EN)
      cache_rg_mstatus_MXR <= `BSV_ASSIGNMENT_DELAY cache_rg_mstatus_MXR$D_IN;
    if (cache_rg_op$EN) cache_rg_op <= `BSV_ASSIGNMENT_DELAY cache_rg_op$D_IN;
    if (cache_rg_pa$EN) cache_rg_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pa$D_IN;
    if (cache_rg_priv$EN)
      cache_rg_priv <= `BSV_ASSIGNMENT_DELAY cache_rg_priv$D_IN;
    if (cache_rg_pte_pa$EN)
      cache_rg_pte_pa <= `BSV_ASSIGNMENT_DELAY cache_rg_pte_pa$D_IN;
    if (cache_rg_satp$EN)
      cache_rg_satp <= `BSV_ASSIGNMENT_DELAY cache_rg_satp$D_IN;
    if (cache_rg_sstatus_SUM$EN)
      cache_rg_sstatus_SUM <= `BSV_ASSIGNMENT_DELAY cache_rg_sstatus_SUM$D_IN;
    if (cache_rg_st_amo_val$EN)
      cache_rg_st_amo_val <= `BSV_ASSIGNMENT_DELAY cache_rg_st_amo_val$D_IN;
    if (cache_rg_victim_way$EN)
      cache_rg_victim_way <= `BSV_ASSIGNMENT_DELAY cache_rg_victim_way$D_IN;
    if (cache_rg_width_code$EN)
      cache_rg_width_code <= `BSV_ASSIGNMENT_DELAY cache_rg_width_code$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cache_aw_events_register = 14'h2AAA;
    cache_cfg_verbosity = 4'hA;
    cache_ctr_wr_rsps_pending_crg = 4'hA;
    cache_rg_addr = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_allow_cap = 1'h0;
    cache_rg_amo_funct5 = 5'h0A;
    cache_rg_cache_rereq_data = 1'h0;
    cache_rg_cset_cword_in_cache = 8'hAA;
    cache_rg_cset_in_cache = 6'h2A;
    cache_rg_ddr4_ready = 1'h0;
    cache_rg_error_during_refill = 1'h0;
    cache_rg_exc_code = 6'h2A;
    cache_rg_is_unsigned = 1'h0;
    cache_rg_ld_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64 = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lower_word64_full = 1'h0;
    cache_rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_lrsc_valid = 1'h0;
    cache_rg_mem_req_sent = 1'h0;
    cache_rg_mstatus_MXR = 1'h0;
    cache_rg_op = 2'h2;
    cache_rg_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_priv = 2'h2;
    cache_rg_pte_pa = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_satp = 64'hAAAAAAAAAAAAAAAA;
    cache_rg_sstatus_SUM = 1'h0;
    cache_rg_st_amo_val = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    cache_rg_state = 5'h0A;
    cache_rg_tlb_walk = 1'h0;
    cache_rg_victim_way = 1'h0;
    cache_rg_width_code = 3'h2;
    cache_rg_wr_rsp_err = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_req)
	$display("MMU_Cache req for addr %x, data_not_instruction %d, resetting %d",
		 req_addr,
		 1'd1,
		 cache_f_reset_reqs$EMPTY_N);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("            To fabric: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_AWFlit { ", "awid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_f_fabric_write_reqs$D_OUT[192:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", mem_req_wr_addr_awlen__h5564);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", _theResult___snd_snd_fst_val__h5602, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("                       ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_WFlit { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", mem_req_wr_data_wdata__h5638);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", mem_req_wr_data_wstrb__h5639);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "wlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] == 3'b100)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_f_fabric_write_reqs$D_OUT[195:193] != 3'b100)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "wuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", mem_req_wr_second_data_wuser__h5466, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_fabric_send_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	begin
	  v__h7303 = $stime;
	  #0;
	end
    v__h7297 = v__h7303 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  cache_cfg_verbosity != 4'd0 &&
	  !cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: %0d sets x %0d ways: all tag states reset to CTAG_EMPTY",
		 v__h7297,
		 "D_MMU_Cache",
		 $signed(32'd64),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_f_reset_reqs$D_OUT)
	begin
	  v__h7398 = $stime;
	  #0;
	end
    v__h7392 = v__h7398 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_reset && cache_rg_cset_in_cache == 6'd63 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_f_reset_reqs$D_OUT)
	$display("%0d: %s.rl_reset: Flushed", v__h7392, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h7531 = $stime;
	  #0;
	end
    v__h7525 = v__h7531 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s: rl_probe_and_immed_rsp; eaddr %0h",
		 v__h7525,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_rg_satp[63:60] != 4'd0)
	$display("        Priv:%0d  SATP:{mode %0d asid %0h pa %0h}  VA:%0h.%0h.%0h",
		 cache_rg_priv,
		 cache_rg_satp[63:60],
		 cache_rg_satp[59:44],
		 satp_pa__h2304,
		 cache_rg_addr[29:21],
		 cache_rg_addr[20:12],
		 cache_rg_addr[11:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("        eaddr = {CTag 0x%0h  CSet 0x%0h  CWord 0x%0h  Byte 0x%0h}",
		 cache_rg_addr[63:12],
		 cache_rg_addr[11:6],
		 cache_rg_addr[5:4],
		 cache_rg_addr[3:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("        CSet 0x%0x: (state, tag):", cache_rg_addr[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_ram_state_and_ctag_cset$DOB[52])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_ram_state_and_ctag_cset$DOB[52])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" (");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_CLEAN");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write("CTAG_EMPTY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_ram_state_and_ctag_cset$DOB[105])
	$write(", 0x%0x", cache_ram_state_and_ctag_cset$DOB[104:53]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_ram_state_and_ctag_cset$DOB[105])
	$write(", --");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" 0x%0x", cache_ram_cword_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" 0x%0x", cache_ram_cword_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_ram_state_and_ctag_cset$DOB[52] &&
	  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d458 &&
	  cache_ram_state_and_ctag_cset$DOB[105] &&
	  cache_ram_state_and_ctag_cset_b_read__53_BITS__ETC___d464)
	$display("        ASSERTION ERROR: fn_test_cache_hit_or_miss: multiple hits in set at [%0d] and [%0d]",
		 $signed(32'd1),
		 1'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("    TLB result: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_tlb$mv_vm_get_xlate[203:202] == 2'd0)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_tlb$mv_vm_get_xlate[203:202] == 2'd1)
	$write("VM_XLATE_TLB_MISS");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd0 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_tlb$mv_vm_get_xlate[201])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_tlb$mv_vm_get_xlate[201])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[136:131]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_tlb$mv_vm_get_xlate[130])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_tlb$mv_vm_get_xlate[130])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$display("    fa_record_pte_A_D_updates:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("VM_Xlate_Result { ", "outcome: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533 &&
	  cache_tlb$mv_vm_get_xlate[203:202] == 2'd0)
	$write("VM_XLATE_OK");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd0)
	$write("VM_XLATE_EXCEPTION");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "allow_cap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533 &&
	  cache_tlb$mv_vm_get_xlate[201])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533 &&
	  !cache_tlb$mv_vm_get_xlate[201])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "exc_code: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[136:131]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "pte_modified: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "pte: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[129:66]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "pte_level: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[65:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write(", ", "pte_pa: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("'h%h", cache_tlb$mv_vm_get_xlate[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_tlb$mv_vm_get_xlate[130] &&
	  NOT_cache_cfg_verbosity_read__61_ULT_2_32___d533)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d903)
	begin
	  v__h36612 = $stime;
	  #0;
	end
    v__h36606 = v__h36612 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d903)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h36606,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  cache_ram_state_and_ctag_cset_b_read__53_BIT_5_ETC___d901)
	$display("        AMO LR: reserving PA 0x%0h",
		 cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d903)
	$display("        Read-hit: addr 0x%0h centry 0x%0h",
		 cache_rg_addr,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d917)
	$display("        Read Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00010 &&
	  NOT_cache_ram_state_and_ctag_cset_b_read__53_B_ETC___d921)
	$display("        AMO LR: cache refill: cancelling LR/SC reservation for PA 0x%0h",
		 cache_rg_lrsc_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd1 &&
	  cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_cac_ETC___d549 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("        ST: cancelling LR/SC reservation for PA",
		 cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  NOT_cache_tlb_mv_vm_get_xlate_cache_rg_satp_10_ETC___d1238)
	$display("        AMO SC: fail: reserved addr 0x%0h, this address 0x%0h",
		 cache_rg_lrsc_pa,
		 cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  !cache_rg_lrsc_valid &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("        AMO SC: fail due to invalid LR/SC reservation");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op == 2'd2 &&
	  cache_rg_amo_funct5 == 5'b00011 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("        AMO SC result = %0d", lrsc_result__h37449);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$display("        Write-Cache-Hit: pa 0x%0h word128 0x%0h",
		 cache_tlb$mv_vm_get_xlate[200:137],
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$write("        New Word128_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1101);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1100);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1251)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  (cache_rg_op == 2'd1 ||
	   cache_rg_op == 2'd2 && cache_rg_amo_funct5 == 5'b00011) &&
	  NOT_cache_rg_op_11_EQ_2_13_55_OR_NOT_cache_rg__ETC___d1255)
	$display("        Write-Cache-Miss: pa 0x%0h word128 0x%0h",
		 cache_tlb$mv_vm_get_xlate[200:137],
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1263)
	$display("        Write-Cache-Hit/Miss: eaddr 0x%0h word128 0x%0h",
		 cache_rg_addr,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  NOT_cache_rg_op_11_EQ_0_12_54_AND_NOT_cache_rg_ETC___d1263)
	$display("        => rl_write_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d1268)
	begin
	  v__h41335 = $stime;
	  #0;
	end
    v__h41329 = v__h41335 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d1268)
	$display("%0d: %s.drive_mem_rsp: addr 0x%0h ld_val 0x%0h st_amo_val 0x%0h",
		 v__h41329,
		 "D_MMU_Cache",
		 64'd0,
		 129'd1,
		 129'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op_11_EQ_2_13_AND_cache_rg_amo_funct5_ETC___d1268)
	$display("        AMO SC: Fail response for addr 0x%0h",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1276)
	$display("        AMO Miss: -> CACHE_START_REFILL.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$display("        AMO: addr 0x%0h amo_f5 0x%0h width_code %0d is_unsigned %0d rs2_val 0x%0h",
		 cache_rg_addr,
		 cache_rg_amo_funct5,
		 cache_rg_width_code,
		 cache_rg_is_unsigned,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$display("          PA 0x%0h ", cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$display("          Cache word 0x%0h, load-result 0x%0h",
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$display("          0x%0h  op  0x%0h -> 0x%0h",
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713,
		 cache_ram_cword_set_b_read__03_BITS_128_TO_0_0_ETC___d713,
		 { cache_rg_width_code == 3'b100 && cache_rg_st_amo_val[128],
		   IF_cache_rg_width_code_81_EQ_0b100_82_THEN_cac_ETC___d1146 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$write("          New CWord_Set:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_addr[5:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$write(" 0x%0x",
	       IF_NOT_cache_ram_state_and_ctag_cset_b_read__5_ETC___d1218);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$write(" 0x%0x",
	       IF_cache_ram_state_and_ctag_cset_b_read__53_BI_ETC___d1217);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map_m_is_mem_addr_cache_tlb_mv_vm_ge_ETC___d1281)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  cache_soc_map$m_is_mem_addr &&
	  cache_rg_op != 2'd0 &&
	  (cache_rg_op != 2'd2 || cache_rg_amo_funct5 != 5'b00010) &&
	  NOT_cache_rg_op_11_EQ_1_35_62_AND_NOT_cache_rg_ETC___d1284)
	$display("        AMO_op: cancelling LR/SC reservation for PA",
		 cache_tlb$mv_vm_get_xlate[200:137]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_probe_and_immed_rsp &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd1 &&
	  cache_tlb$mv_vm_get_xlate[203:202] != 2'd2 &&
	  !cache_soc_map$m_is_mem_addr &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => IO_REQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_ddr4_ready)
	begin
	  v__h65255 = $stime;
	  #0;
	end
    v__h65249 = v__h65255 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_ddr4_ready)
	$display("%0d: %m.ma_ddr4_ready: Enabling MMU_Cache", v__h65249);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h46993 = $stime;
	  #0;
	end
    v__h46987 = v__h46993 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_start_tlb_refill for eaddr 0x%0h; req for level 2 PTE",
		 v__h46987,
		 "D_MMU_Cache",
		 cache_rg_addr);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h47182 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h47182);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", lev_2_pte_pa_w64_fa__h47044);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_tlb_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h47965 = $stime;
	  #0;
	end
    v__h47959 = v__h47965 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h47959,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h47703 = $stime;
	  #0;
	end
    v__h47697 = v__h47703 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 1",
		 v__h47697,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    Req for level 1 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h48120 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h48120);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", lev_1_pte_pa_w64_fa__h47999);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1408)
	begin
	  v__h48286 = $stime;
	  #0;
	end
    v__h48280 = v__h48286 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1408)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: gigapage pte 0x%0h @ 0x%0h",
		 v__h48280,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  (cache_masterPortShim_rff$D_OUT[31:23] != 9'd0 ||
	   cache_masterPortShim_rff$D_OUT[22:14] != 9'd0))
	$display("    Invalid PTE: PPN[1] or PPN[0] is not zero; page fault %0d",
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1420)
	begin
	  v__h48403 = $stime;
	  #0;
	end
    v__h48397 = v__h48403 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1420)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for gigapage",
		 v__h48397,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  cache_masterPortShim_rff_first__342_BIT_7_350__ETC___d1420)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h47995);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h47885 = $stime;
	  #0;
	end
    v__h47879 = v__h47885 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_2 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_2: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h47879,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5081);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h49078 = $stime;
	  #0;
	end
    v__h49072 = v__h49078 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h49072,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h48819 = $stime;
	  #0;
	end
    v__h48813 = v__h48819 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: continue to level 0",
		 v__h48813,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    Req for level 0 PTE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h49232 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h49232);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", lev_0_pte_pa_w64_fa__h49112);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1453)
	begin
	  v__h49515 = $stime;
	  #0;
	end
    v__h49509 = v__h49515 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1453)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE for megapage",
		 v__h49509,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1453)
	$display("    Addr Space megapage pa: 0x%0h", lev_1_PTN_pa__h47995);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1459)
	begin
	  v__h49398 = $stime;
	  #0;
	end
    v__h49392 = v__h49398 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff_first__342_BITS_3_TO__ETC___d1459)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: megapage pte 0x%0h @ 0x%0h",
		 v__h49392,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  cache_masterPortShim_rff$D_OUT[22:14] != 9'd0)
	$display("    Invalid PTE: PPN [0] is not zero; page fault %0d",
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h48998 = $stime;
	  #0;
	end
    v__h48992 = v__h48998 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_1: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h48992,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5081);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h50031 = $stime;
	  #0;
	end
    v__h50025 = v__h50031 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (!cache_masterPortShim_rff$D_OUT[4] ||
	   !cache_masterPortShim_rff$D_OUT[5] &&
	   cache_masterPortShim_rff$D_OUT[6]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: Invalid PTE; page fault %0d",
		 v__h50025,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h50111 = $stime;
	  #0;
	end
    v__h50105 = v__h50111 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  !cache_masterPortShim_rff$D_OUT[6] &&
	  !cache_masterPortShim_rff$D_OUT[7] &&
	  !cache_masterPortShim_rff$D_OUT[5] &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x50h: Not a leaf PTE; page fault %0d",
		 v__h50105,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa,
		 page_fault_exc_code__h5082);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h50202 = $stime;
	  #0;
	end
    v__h50196 = v__h50202 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte 0x%0h @ 0x%0h: leaf PTE",
		 v__h50196,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_masterPortShim_rff$D_OUT[67:4],
		 cache_rg_pte_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[4] &&
	  (cache_masterPortShim_rff$D_OUT[5] ||
	   !cache_masterPortShim_rff$D_OUT[6]) &&
	  (cache_masterPortShim_rff$D_OUT[7] ||
	   cache_masterPortShim_rff$D_OUT[5]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    Addr Space page pa: 0x%0h", lev_1_PTN_pa__h47995);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h49951 = $stime;
	  #0;
	end
    v__h49945 = v__h49951 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_ptw_level_0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_ptw_level_0: for eaddr 0x%0h: pte_pa 0x%0h: FABRIC_RSP_ERR: access exception %0d",
		 v__h49945,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pte_pa,
		 access_exc_code__h5081);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h50512 = $stime;
	  #0;
	end
    v__h50506 = v__h50512 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_start_cache_refill: ", v__h50506, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h50654 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h50654);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cline_fabric_addr__h50561);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd7);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_cache_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    Victim way %0d; => CACHE_REFILL", tmp__h50715[0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	begin
	  v__h51380 = $stime;
	  #0;
	end
    v__h51374 = v__h51380 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$display("%0d: %s.rl_cache_refill_rsps_loop:",
		 v__h51374,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h51638 = $stime;
	  #0;
	end
    v__h51632 = v__h51638 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_cache_refill_rsps_loop: FABRIC_RSP_ERR: raising access exception %0d",
		 v__h51632,
		 "D_MMU_Cache",
		 access_exc_code__h5081);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$display("        64b fabric: concat with rg_lower_word64: new_word128 0x%0x",
		 { cache_masterPortShim_rff$D_OUT[0],
		   cache_masterPortShim_rff$D_OUT[67:4],
		   cache_rg_lower_word64 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_cset_cword_in_cache[1:0] == 2'd3 &&
	  (cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 ||
	   cache_rg_error_during_refill) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => MODULE_EXCEPTION_RSP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  cache_rg_cset_cword_in_cache[1:0] == 2'd3 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  !cache_rg_error_during_refill &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => CACHE_REREQ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$display("        Updating Cache cword_set 0x%0h, cword_in_cline %0d) old => new",
		 cache_rg_cset_cword_in_cache,
		 cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(" 0x%0x", cache_ram_cword_set$DOB[128:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(" 0x%0x", cache_ram_cword_set$DOB[257:129]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("        CSet 0x%0x, CWord 0x%0x: ",
	       cache_rg_addr[11:6],
	       cache_rg_cset_cword_in_cache[1:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_502_THEN_cache_ram_cwor_ETC___d1572);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write(" 0x%0x",
	       IF_cache_rg_victim_way_502_THEN_cache_masterPo_ETC___d1573);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop &&
	  !cache_rg_lower_word64_full &&
	  NOT_cache_cfg_verbosity_read__61_ULE_2_510___d1511)
	$display("        Recording rdata in rg_lower_word64");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_rereq &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    fa_req_ram_B tagCSet [0x%0x] cword_set [0x%0d]",
		 cache_rg_addr[11:6],
		 cache_rg_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h54747 = $stime;
	  #0;
	end
    v__h54741 = v__h54747 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_read_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h54741,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h54976 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h54976);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", size_val__h57519, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h55077 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h55077);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h55289 = $stime;
	  #0;
	end
    v__h55283 = v__h55289 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h55283,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56495 = $stime;
	  #0;
	end
    v__h56489 = v__h56495 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56489,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 65'd0, _theResult___fst__h55527 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56630 = $stime;
	  #0;
	end
    v__h56624 = v__h56630 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && !cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56624,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56325 = $stime;
	  #0;
	end
    v__h56319 = v__h56325 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56319,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, b__h51868 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56759 = $stime;
	  #0;
	end
    v__h56753 = v__h56759 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_read_rsp && cache_rg_lower_word64_full &&
	  cache_masterPortShim_rff$D_OUT[1] &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_read_rsp: FABRIC_RSP_ERR: raising trap LOAD_ACCESS_FAULT",
		 v__h56753,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56869 = $stime;
	  #0;
	end
    v__h56863 = v__h56869 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_maintain_io_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h56863,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { cache_rg_allow_cap && cache_rg_ld_val[128],
		   cache_rg_ld_val[127:0] });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h56959 = $stime;
	  #0;
	end
    v__h56953 = v__h56959 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s: rl_io_write_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h56953,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_write_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h57195 = $stime;
	  #0;
	end
    v__h57189 = v__h57195 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s: rl_io_AMO_SC_req; width_code 0x%0h  vaddr %0h  paddr %0h  word64 0x%0h",
		 v__h57189,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    FAIL due to I/O address.");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_SC_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h57339 = $stime;
	  #0;
	end
    v__h57333 = v__h57339 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_AMO_op_req; width_code 0x%0h vaddr %0h  paddr %0h",
		 v__h57333,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h57544 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h57544);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", size_val__h57519, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  _1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h57645 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0t            To fabric: ", v__h57645);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_ARFlit { ", "arid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlen: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 8'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arsize: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_Size { ", "val: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'b011, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arburst: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("INCR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arlock: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("NORMAL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arcache: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'b0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 3'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arqos: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "arregion: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 4'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_op_req &&
	  !_1_SL_IF_cache_rg_width_code_81_EQ_0_17_OR_cach_ETC___d1593 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h57805 = $stime;
	  #0;
	end
    v__h57799 = v__h57805 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_AMO_read_rsp: vaddr 0x%0h  paddr 0x%0h",
		 v__h57799,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 cache_rg_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_RFlit { ", "rid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[71:68]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[67:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd1 &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "rlast: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  cache_masterPortShim_rff$D_OUT[1])
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  !cache_masterPortShim_rff$D_OUT[1])
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_rff$D_OUT[0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h58208 = $stime;
	  #0;
	end
    v__h58202 = v__h58208 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s: rl_io_AMO_read_rsp; width_code 0x%0h  vaddr %0h  paddr %0h  word128 0x%0h",
		 v__h58202,
		 "D_MMU_Cache",
		 cache_rg_width_code,
		 cache_rg_addr,
		 cache_rg_pa,
		 cache_rg_st_amo_val);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h60475 = $stime;
	  #0;
	end
    v__h60469 = v__h60475 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.drive_IO_read_rsp: addr 0x%0h ld_val 0x%0h",
		 v__h60469,
		 "D_MMU_Cache",
		 cache_rg_addr,
		 { 1'd0, x__h60453 });
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] == 2'd0 &&
	  (cache_rg_lower_word64_full || cache_masterPortShim_rff$D_OUT[1]) &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    => rl_ST_AMO_response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h58136 = $stime;
	  #0;
	end
    v__h58130 = v__h58136 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_io_AMO_read_rsp &&
	  cache_masterPortShim_rff$D_OUT[3:2] != 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.rl_io_AMO_read_rsp: FABRIC_RSP_ERR: raising trap STORE_AMO_ACCESS_FAULT",
		 v__h58130,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h61115 = $stime;
	  #0;
	end
    v__h61109 = v__h61115 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0d: %s.rl_discard_write_rsp: pending %0d ",
	       v__h61109,
	       "D_MMU_Cache",
	       $unsigned(b__h46947));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd0 &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	begin
	  v__h61157 = $stime;
	  #0;
	end
    v__h61151 = v__h61157 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$display("%0d: %s.rl_discard_write_rsp: fabric response error: exit",
		 v__h61151,
		 "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("AXI4_BFlit { ", "bid: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", cache_masterPortShim_bff$D_OUT[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd1)
	$write("EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] == 2'd2)
	$write("SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd1 &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd2)
	$write("DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_discard_write_rsp &&
	  cache_masterPortShim_bff$D_OUT[1:0] != 2'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	begin
	  v__h6838 = $stime;
	  #0;
	end
    v__h6832 = v__h6838 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_rl_start_reset)
	$display("%0d: %s: cache size %0d KB, associativity %0d, line size %0d bytes (= %0d XLEN words)",
		 v__h6832,
		 "D_MMU_Cache",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd32),
		 $signed(32'd4));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h62085 = $stime;
	  #0;
	end
    v__h62079 = v__h62085 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("%0d: %m.req: op:", v__h62079);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_op == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_op == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_op != 2'd0 &&
	  req_op != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" width_code:%0d addr:0x%0h st_value:0x%0h",
	       req_width_code,
	       req_addr,
	       req_st_value,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write("    priv:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_priv == 2'b0)
	$write("U");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_priv == 2'b01)
	$write("S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_priv == 2'b11)
	$write("M");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363 &&
	  req_priv != 2'b0 &&
	  req_priv != 2'b01 &&
	  req_priv != 2'b11)
	$write("RESERVED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$write(" sstatus_SUM:%0d mstatus_MXR:%0d satp:0x%0h",
	       req_sstatus_SUM,
	       req_mstatus_MXR,
	       req_satp,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("    amo_funct5 = 0x%0h", req_amo_funct5);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  IF_cache_w_req_width_code_whas__933_THEN_cache_ETC___d2032)
	$display("    fa_req_ram_B tagCSet [0x%0x] cword_set [0x%0d]",
		 req_addr[11:6],
		 req_addr[11:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	begin
	  v__h63832 = $stime;
	  #0;
	end
    v__h63826 = v__h63832 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_tlb_flush && NOT_cache_cfg_verbosity_read__61_ULE_1_62___d363)
	$display("%0d: %s.tlb_flush", v__h63826, "D_MMU_Cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && EN_tlb_flush)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 2007, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_tlb_flush] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_do_reset_req)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 2006, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_do_reset_req] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_start_cache_refill)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 2005, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_start_cache_refill] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req && WILL_FIRE_RL_cache_rl_rereq)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 2004, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_rereq] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_cache_do_req &&
	  WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop)
	$display("Error: \"../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv\", line 2003, column 29: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_cache_do_req] and\n  [RL_cache_rl_cache_refill_rsps_loop] ) fired in the same clock cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkMMU_DCache

